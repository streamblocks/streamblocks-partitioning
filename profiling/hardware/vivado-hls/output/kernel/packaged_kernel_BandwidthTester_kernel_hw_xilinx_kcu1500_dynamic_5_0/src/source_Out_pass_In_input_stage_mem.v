// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="source_Out_pass_In_input_stage_mem,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcku115-flvb2104-2-e,HLS_INPUT_CLOCK=3.330000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.913750,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=243,HLS_SYN_DSP=0,HLS_SYN_FF=7233,HLS_SYN_LUT=20611,HLS_VERSION=2018_2}" *)

module source_Out_pass_In_input_stage_mem (
        ap_clk,
        ap_rst_n,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_source_Out_pass_In_AWVALID,
        m_axi_source_Out_pass_In_AWREADY,
        m_axi_source_Out_pass_In_AWADDR,
        m_axi_source_Out_pass_In_AWID,
        m_axi_source_Out_pass_In_AWLEN,
        m_axi_source_Out_pass_In_AWSIZE,
        m_axi_source_Out_pass_In_AWBURST,
        m_axi_source_Out_pass_In_AWLOCK,
        m_axi_source_Out_pass_In_AWCACHE,
        m_axi_source_Out_pass_In_AWPROT,
        m_axi_source_Out_pass_In_AWQOS,
        m_axi_source_Out_pass_In_AWREGION,
        m_axi_source_Out_pass_In_AWUSER,
        m_axi_source_Out_pass_In_WVALID,
        m_axi_source_Out_pass_In_WREADY,
        m_axi_source_Out_pass_In_WDATA,
        m_axi_source_Out_pass_In_WSTRB,
        m_axi_source_Out_pass_In_WLAST,
        m_axi_source_Out_pass_In_WID,
        m_axi_source_Out_pass_In_WUSER,
        m_axi_source_Out_pass_In_ARVALID,
        m_axi_source_Out_pass_In_ARREADY,
        m_axi_source_Out_pass_In_ARADDR,
        m_axi_source_Out_pass_In_ARID,
        m_axi_source_Out_pass_In_ARLEN,
        m_axi_source_Out_pass_In_ARSIZE,
        m_axi_source_Out_pass_In_ARBURST,
        m_axi_source_Out_pass_In_ARLOCK,
        m_axi_source_Out_pass_In_ARCACHE,
        m_axi_source_Out_pass_In_ARPROT,
        m_axi_source_Out_pass_In_ARQOS,
        m_axi_source_Out_pass_In_ARREGION,
        m_axi_source_Out_pass_In_ARUSER,
        m_axi_source_Out_pass_In_RVALID,
        m_axi_source_Out_pass_In_RREADY,
        m_axi_source_Out_pass_In_RDATA,
        m_axi_source_Out_pass_In_RLAST,
        m_axi_source_Out_pass_In_RID,
        m_axi_source_Out_pass_In_RUSER,
        m_axi_source_Out_pass_In_RRESP,
        m_axi_source_Out_pass_In_BVALID,
        m_axi_source_Out_pass_In_BREADY,
        m_axi_source_Out_pass_In_BRESP,
        m_axi_source_Out_pass_In_BID,
        m_axi_source_Out_pass_In_BUSER,
        source_Out_pass_In_requested_size,
        source_Out_pass_In_size_V,
        source_Out_pass_In_buffer_V,
        fifo_count,
        fifo_size,
        source_Out_pass_In_V_din,
        source_Out_pass_In_V_full_n,
        source_Out_pass_In_V_write,
        source_Out_pass_In_offset_V_dout,
        source_Out_pass_In_offset_V_empty_n,
        source_Out_pass_In_offset_V_read,
        ap_return
);

parameter    ap_ST_fsm_state1 = 58'd1;
parameter    ap_ST_fsm_state2 = 58'd2;
parameter    ap_ST_fsm_state3 = 58'd4;
parameter    ap_ST_fsm_state4 = 58'd8;
parameter    ap_ST_fsm_state5 = 58'd16;
parameter    ap_ST_fsm_state6 = 58'd32;
parameter    ap_ST_fsm_pp0_stage0 = 58'd64;
parameter    ap_ST_fsm_state11 = 58'd128;
parameter    ap_ST_fsm_state12 = 58'd256;
parameter    ap_ST_fsm_state13 = 58'd512;
parameter    ap_ST_fsm_state14 = 58'd1024;
parameter    ap_ST_fsm_state15 = 58'd2048;
parameter    ap_ST_fsm_state16 = 58'd4096;
parameter    ap_ST_fsm_state17 = 58'd8192;
parameter    ap_ST_fsm_state18 = 58'd16384;
parameter    ap_ST_fsm_state19 = 58'd32768;
parameter    ap_ST_fsm_state20 = 58'd65536;
parameter    ap_ST_fsm_pp1_stage0 = 58'd131072;
parameter    ap_ST_fsm_state24 = 58'd262144;
parameter    ap_ST_fsm_pp2_stage0 = 58'd524288;
parameter    ap_ST_fsm_state30 = 58'd1048576;
parameter    ap_ST_fsm_state31 = 58'd2097152;
parameter    ap_ST_fsm_state32 = 58'd4194304;
parameter    ap_ST_fsm_state33 = 58'd8388608;
parameter    ap_ST_fsm_state34 = 58'd16777216;
parameter    ap_ST_fsm_state35 = 58'd33554432;
parameter    ap_ST_fsm_state36 = 58'd67108864;
parameter    ap_ST_fsm_state37 = 58'd134217728;
parameter    ap_ST_fsm_state38 = 58'd268435456;
parameter    ap_ST_fsm_state39 = 58'd536870912;
parameter    ap_ST_fsm_pp3_stage0 = 58'd1073741824;
parameter    ap_ST_fsm_state43 = 58'd2147483648;
parameter    ap_ST_fsm_state44 = 58'd4294967296;
parameter    ap_ST_fsm_state45 = 58'd8589934592;
parameter    ap_ST_fsm_state46 = 58'd17179869184;
parameter    ap_ST_fsm_state47 = 58'd34359738368;
parameter    ap_ST_fsm_state48 = 58'd68719476736;
parameter    ap_ST_fsm_state49 = 58'd137438953472;
parameter    ap_ST_fsm_state50 = 58'd274877906944;
parameter    ap_ST_fsm_state51 = 58'd549755813888;
parameter    ap_ST_fsm_state52 = 58'd1099511627776;
parameter    ap_ST_fsm_state53 = 58'd2199023255552;
parameter    ap_ST_fsm_state54 = 58'd4398046511104;
parameter    ap_ST_fsm_state55 = 58'd8796093022208;
parameter    ap_ST_fsm_state56 = 58'd17592186044416;
parameter    ap_ST_fsm_state57 = 58'd35184372088832;
parameter    ap_ST_fsm_state58 = 58'd70368744177664;
parameter    ap_ST_fsm_state59 = 58'd140737488355328;
parameter    ap_ST_fsm_state60 = 58'd281474976710656;
parameter    ap_ST_fsm_state61 = 58'd562949953421312;
parameter    ap_ST_fsm_state62 = 58'd1125899906842624;
parameter    ap_ST_fsm_state63 = 58'd2251799813685248;
parameter    ap_ST_fsm_state64 = 58'd4503599627370496;
parameter    ap_ST_fsm_state65 = 58'd9007199254740992;
parameter    ap_ST_fsm_state66 = 58'd18014398509481984;
parameter    ap_ST_fsm_state67 = 58'd36028797018963968;
parameter    ap_ST_fsm_state68 = 58'd72057594037927936;
parameter    ap_ST_fsm_state69 = 58'd144115188075855872;
parameter    C_M_AXI_SOURCE_OUT_PASS_IN_ID_WIDTH = 1;
parameter    C_M_AXI_SOURCE_OUT_PASS_IN_ADDR_WIDTH = 64;
parameter    C_M_AXI_SOURCE_OUT_PASS_IN_DATA_WIDTH = 512;
parameter    C_M_AXI_SOURCE_OUT_PASS_IN_AWUSER_WIDTH = 1;
parameter    C_M_AXI_SOURCE_OUT_PASS_IN_ARUSER_WIDTH = 1;
parameter    C_M_AXI_SOURCE_OUT_PASS_IN_WUSER_WIDTH = 1;
parameter    C_M_AXI_SOURCE_OUT_PASS_IN_RUSER_WIDTH = 1;
parameter    C_M_AXI_SOURCE_OUT_PASS_IN_BUSER_WIDTH = 1;
parameter    C_M_AXI_SOURCE_OUT_PASS_IN_USER_VALUE = 0;
parameter    C_M_AXI_SOURCE_OUT_PASS_IN_PROT_VALUE = 0;
parameter    C_M_AXI_SOURCE_OUT_PASS_IN_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_M_AXI_SOURCE_OUT_PASS_IN_WSTRB_WIDTH = (512 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_source_Out_pass_In_AWVALID;
input   m_axi_source_Out_pass_In_AWREADY;
output  [C_M_AXI_SOURCE_OUT_PASS_IN_ADDR_WIDTH - 1:0] m_axi_source_Out_pass_In_AWADDR;
output  [C_M_AXI_SOURCE_OUT_PASS_IN_ID_WIDTH - 1:0] m_axi_source_Out_pass_In_AWID;
output  [7:0] m_axi_source_Out_pass_In_AWLEN;
output  [2:0] m_axi_source_Out_pass_In_AWSIZE;
output  [1:0] m_axi_source_Out_pass_In_AWBURST;
output  [1:0] m_axi_source_Out_pass_In_AWLOCK;
output  [3:0] m_axi_source_Out_pass_In_AWCACHE;
output  [2:0] m_axi_source_Out_pass_In_AWPROT;
output  [3:0] m_axi_source_Out_pass_In_AWQOS;
output  [3:0] m_axi_source_Out_pass_In_AWREGION;
output  [C_M_AXI_SOURCE_OUT_PASS_IN_AWUSER_WIDTH - 1:0] m_axi_source_Out_pass_In_AWUSER;
output   m_axi_source_Out_pass_In_WVALID;
input   m_axi_source_Out_pass_In_WREADY;
output  [C_M_AXI_SOURCE_OUT_PASS_IN_DATA_WIDTH - 1:0] m_axi_source_Out_pass_In_WDATA;
output  [C_M_AXI_SOURCE_OUT_PASS_IN_WSTRB_WIDTH - 1:0] m_axi_source_Out_pass_In_WSTRB;
output   m_axi_source_Out_pass_In_WLAST;
output  [C_M_AXI_SOURCE_OUT_PASS_IN_ID_WIDTH - 1:0] m_axi_source_Out_pass_In_WID;
output  [C_M_AXI_SOURCE_OUT_PASS_IN_WUSER_WIDTH - 1:0] m_axi_source_Out_pass_In_WUSER;
output   m_axi_source_Out_pass_In_ARVALID;
input   m_axi_source_Out_pass_In_ARREADY;
output  [C_M_AXI_SOURCE_OUT_PASS_IN_ADDR_WIDTH - 1:0] m_axi_source_Out_pass_In_ARADDR;
output  [C_M_AXI_SOURCE_OUT_PASS_IN_ID_WIDTH - 1:0] m_axi_source_Out_pass_In_ARID;
output  [7:0] m_axi_source_Out_pass_In_ARLEN;
output  [2:0] m_axi_source_Out_pass_In_ARSIZE;
output  [1:0] m_axi_source_Out_pass_In_ARBURST;
output  [1:0] m_axi_source_Out_pass_In_ARLOCK;
output  [3:0] m_axi_source_Out_pass_In_ARCACHE;
output  [2:0] m_axi_source_Out_pass_In_ARPROT;
output  [3:0] m_axi_source_Out_pass_In_ARQOS;
output  [3:0] m_axi_source_Out_pass_In_ARREGION;
output  [C_M_AXI_SOURCE_OUT_PASS_IN_ARUSER_WIDTH - 1:0] m_axi_source_Out_pass_In_ARUSER;
input   m_axi_source_Out_pass_In_RVALID;
output   m_axi_source_Out_pass_In_RREADY;
input  [C_M_AXI_SOURCE_OUT_PASS_IN_DATA_WIDTH - 1:0] m_axi_source_Out_pass_In_RDATA;
input   m_axi_source_Out_pass_In_RLAST;
input  [C_M_AXI_SOURCE_OUT_PASS_IN_ID_WIDTH - 1:0] m_axi_source_Out_pass_In_RID;
input  [C_M_AXI_SOURCE_OUT_PASS_IN_RUSER_WIDTH - 1:0] m_axi_source_Out_pass_In_RUSER;
input  [1:0] m_axi_source_Out_pass_In_RRESP;
input   m_axi_source_Out_pass_In_BVALID;
output   m_axi_source_Out_pass_In_BREADY;
input  [1:0] m_axi_source_Out_pass_In_BRESP;
input  [C_M_AXI_SOURCE_OUT_PASS_IN_ID_WIDTH - 1:0] m_axi_source_Out_pass_In_BID;
input  [C_M_AXI_SOURCE_OUT_PASS_IN_BUSER_WIDTH - 1:0] m_axi_source_Out_pass_In_BUSER;
input  [31:0] source_Out_pass_In_requested_size;
input  [63:0] source_Out_pass_In_size_V;
input  [63:0] source_Out_pass_In_buffer_V;
input  [31:0] fifo_count;
input  [31:0] fifo_size;
output  [31:0] source_Out_pass_In_V_din;
input   source_Out_pass_In_V_full_n;
output   source_Out_pass_In_V_write;
input  [63:0] source_Out_pass_In_offset_V_dout;
input   source_Out_pass_In_offset_V_empty_n;
output   source_Out_pass_In_offset_V_read;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[31:0] source_Out_pass_In_V_din;
reg source_Out_pass_In_V_write;
reg source_Out_pass_In_offset_V_read;
reg[31:0] ap_return;

 reg    ap_rst_n_inv;
(* fsm_encoding = "none" *) reg   [57:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [63:0] i_source_Out_pass_In_input_stage_mem_tokens_read;
reg   [3:0] i_source_Out_pass_In_input_stage_mem_partial_bus_line_len;
reg   [511:0] i_source_Out_pass_In_input_stage_mem_partial_bus_line_bus_line_V;
reg   [63:0] i_source_Out_pass_In_input_stage_mem_bus_lines_read;
reg   [5:0] i_source_Out_pass_In_input_stage_mem_burst_buffer_V_address0;
reg    i_source_Out_pass_In_input_stage_mem_burst_buffer_V_ce0;
reg    i_source_Out_pass_In_input_stage_mem_burst_buffer_V_we0;
wire   [511:0] i_source_Out_pass_In_input_stage_mem_burst_buffer_V_q0;
reg    source_Out_pass_In_blk_n_AW;
wire    ap_CS_fsm_state62;
reg    source_Out_pass_In_blk_n_W;
wire    ap_CS_fsm_state63;
reg    source_Out_pass_In_blk_n_B;
wire    ap_CS_fsm_state68;
wire    ap_CS_fsm_state43;
wire    ap_CS_fsm_state44;
wire    ap_CS_fsm_state49;
reg   [0:0] tmp_107_reg_1513;
reg   [0:0] can_read_reg_1509;
reg    source_Out_pass_In_blk_n_AR;
wire    ap_CS_fsm_state54;
reg    source_Out_pass_In_blk_n_R;
wire    ap_CS_fsm_state61;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] exitcond77_i_reg_1715;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state38;
reg    source_Out_pass_In_V_blk_n;
reg    ap_enable_reg_pp0_iter3;
wire    ap_block_pp0_stage0;
reg   [0:0] tmp_22_reg_1625;
reg   [0:0] tmp_22_reg_1625_pp0_iter2_reg;
reg    ap_enable_reg_pp2_iter4;
wire    ap_block_pp2_stage0;
reg   [0:0] exitcond_flatten_reg_1734;
reg   [0:0] exitcond_flatten_reg_1734_pp2_iter3_reg;
reg    ap_enable_reg_pp3_iter2;
wire    ap_block_pp3_stage0;
reg   [0:0] exitcond1_reg_1801;
reg   [0:0] exitcond1_reg_1801_pp3_iter1_reg;
reg    source_Out_pass_In_offset_V_blk_n;
wire    ap_CS_fsm_state2;
wire   [0:0] tmp_107_nbreadreq_fu_230_p3;
reg    source_Out_pass_In_AWVALID;
wire    source_Out_pass_In_AWREADY;
reg    source_Out_pass_In_WVALID;
wire    source_Out_pass_In_WREADY;
reg   [511:0] source_Out_pass_In_WDATA;
reg    source_Out_pass_In_ARVALID;
wire    source_Out_pass_In_ARREADY;
reg   [63:0] source_Out_pass_In_ARADDR;
reg   [31:0] source_Out_pass_In_ARLEN;
wire    source_Out_pass_In_RVALID;
reg    source_Out_pass_In_RREADY;
wire   [511:0] source_Out_pass_In_RDATA;
wire    source_Out_pass_In_RLAST;
wire   [0:0] source_Out_pass_In_RID;
wire   [0:0] source_Out_pass_In_RUSER;
wire   [1:0] source_Out_pass_In_RRESP;
wire    source_Out_pass_In_BVALID;
reg    source_Out_pass_In_BREADY;
wire   [1:0] source_Out_pass_In_BRESP;
wire   [0:0] source_Out_pass_In_BID;
wire   [0:0] source_Out_pass_In_BUSER;
reg   [15:0] k_0_i_reg_331;
reg   [31:0] j_0_i_reg_377;
reg   [31:0] j_0_i_reg_377_pp1_iter1_reg;
wire    ap_block_state21_pp1_stage0_iter0;
reg    ap_block_state22_pp1_stage0_iter1;
wire    ap_block_state23_pp1_stage0_iter2;
reg    ap_block_pp1_stage0_11001;
reg   [35:0] indvar_flatten_reg_389;
reg   [31:0] j1_0_i_reg_400;
reg   [4:0] k2_0_i_reg_411;
reg   [3:0] k7_0_i_reg_422;
wire   [31:0] fifo_space_fu_515_p3;
reg   [31:0] fifo_space_reg_1465;
reg   [63:0] i_source_Out_pass_In_input_stage_mem_tokens_read_load_reg_1471;
wire   [31:0] tokens_left_fu_531_p2;
reg   [31:0] tokens_left_reg_1476;
wire   [63:0] tmp_6_fu_547_p1;
reg   [63:0] tmp_6_reg_1482;
reg    ap_block_state2;
wire   [58:0] tmp_6_cast_fu_551_p1;
reg   [58:0] tmp_6_cast_reg_1488;
reg   [63:0] source_Out_pass_In_addr_reg_1493;
wire   [31:0] stream_prologue_size_4_fu_579_p3;
reg   [31:0] stream_prologue_size_4_reg_1500;
wire   [0:0] can_read_fu_585_p2;
reg   [3:0] i_source_Out_pass_In_input_stage_mem_partial_bus_line_len_load_reg_1517;
reg   [63:0] tmp_18_reg_1526;
wire   [3:0] partial_tokens_fu_601_p1;
reg   [3:0] partial_tokens_reg_1533;
wire   [0:0] tmp_10_fu_605_p2;
reg   [0:0] tmp_10_reg_1539;
wire    ap_CS_fsm_state3;
wire   [31:0] stream_prologue_size_cast8_fu_627_p1;
reg   [31:0] stream_prologue_size_cast8_reg_1545;
wire   [0:0] tmp_13_fu_631_p2;
reg   [0:0] tmp_13_reg_1550;
wire   [31:0] tokens_in_memory_1_fu_636_p2;
reg   [31:0] tokens_in_memory_1_reg_1556;
wire   [3:0] stream_epilogue_size_fu_658_p1;
reg   [3:0] stream_epilogue_size_reg_1561;
wire    ap_CS_fsm_state4;
wire   [31:0] stream_prologue_size_3_fu_662_p3;
reg   [31:0] stream_prologue_size_3_reg_1568;
wire   [0:0] tmp_14_fu_669_p2;
reg   [0:0] tmp_14_reg_1574;
reg   [27:0] tmp_19_reg_1579;
wire   [28:0] full_bus_lines_to_read_fu_700_p3;
reg   [28:0] full_bus_lines_to_read_reg_1584;
wire    ap_CS_fsm_state5;
reg   [63:0] base_address_reg_1591;
wire    ap_CS_fsm_state6;
wire   [0:0] tmp_17_fu_717_p2;
reg   [0:0] tmp_17_reg_1598;
wire  signed [31:0] full_bus_lines_to_read_2_cast_fu_739_p1;
reg  signed [31:0] full_bus_lines_to_read_2_cast_reg_1602;
wire   [15:0] k_fu_743_p1;
wire   [3:0] tmp_30_fu_746_p1;
reg   [3:0] tmp_30_reg_1615;
wire   [31:0] tmp_20_fu_749_p2;
reg   [31:0] tmp_20_reg_1620;
wire   [0:0] tmp_22_fu_758_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state7_pp0_stage0_iter0;
wire    ap_block_state8_pp0_stage0_iter1;
wire    ap_block_state9_pp0_stage0_iter2;
reg    ap_block_state10_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] tmp_22_reg_1625_pp0_iter1_reg;
wire   [15:0] k_1_fu_763_p2;
reg   [15:0] k_1_reg_1629;
reg    ap_enable_reg_pp0_iter0;
wire   [12:0] tmp_25_fu_781_p2;
reg   [12:0] tmp_25_reg_1634;
wire   [0:0] tmp_39_fu_806_p2;
reg   [0:0] tmp_39_reg_1639;
wire   [9:0] tmp_50_fu_816_p3;
reg   [9:0] tmp_50_reg_1646;
wire   [9:0] tmp_52_fu_824_p1;
reg   [9:0] tmp_52_reg_1653;
wire   [9:0] tmp_58_fu_828_p2;
reg   [9:0] tmp_58_reg_1659;
wire   [9:0] tmp_63_fu_875_p2;
reg   [9:0] tmp_63_reg_1664;
wire   [511:0] tmp_66_fu_885_p2;
reg   [511:0] tmp_66_reg_1669;
wire   [31:0] i_fu_920_p2;
reg   [31:0] i_reg_1677;
wire    ap_CS_fsm_state12;
wire   [0:0] tmp_28_fu_915_p2;
wire   [0:0] tmp_31_fu_926_p2;
reg   [0:0] tmp_31_reg_1682;
wire   [31:0] chunk_size_fu_931_p2;
reg   [31:0] chunk_size_reg_1687;
wire   [63:0] source_Out_pass_In_buffer_V4_sum5_fu_945_p2;
reg   [63:0] source_Out_pass_In_buffer_V4_sum5_reg_1692;
wire   [63:0] source_Out_pass_In_buffer_V4_sum_fu_958_p2;
reg   [63:0] source_Out_pass_In_buffer_V4_sum_reg_1697;
wire   [31:0] p_i_fu_963_p3;
reg   [31:0] p_i_reg_1702;
wire    ap_CS_fsm_state13;
reg    ap_sig_ioackin_source_Out_pass_In_ARREADY;
wire   [0:0] exitcond77_i_fu_975_p2;
reg   [0:0] exitcond77_i_reg_1715_pp1_iter1_reg;
wire   [31:0] j_fu_980_p2;
reg   [31:0] j_reg_1719;
reg    ap_enable_reg_pp1_iter0;
reg   [511:0] source_Out_pass_In_addr_2_read_reg_1724;
wire   [35:0] tmp_37_fu_991_p3;
reg   [35:0] tmp_37_reg_1729;
wire    ap_CS_fsm_state24;
wire   [0:0] exitcond_flatten_fu_998_p2;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state25_pp2_stage0_iter0;
wire    ap_block_state26_pp2_stage0_iter1;
wire    ap_block_state27_pp2_stage0_iter2;
wire    ap_block_state28_pp2_stage0_iter3;
reg    ap_block_state29_pp2_stage0_iter4;
reg    ap_block_pp2_stage0_11001;
reg   [0:0] exitcond_flatten_reg_1734_pp2_iter1_reg;
reg   [0:0] exitcond_flatten_reg_1734_pp2_iter2_reg;
wire   [35:0] indvar_flatten_next_fu_1003_p2;
reg    ap_enable_reg_pp2_iter0;
wire   [31:0] bus_line_V_mid2_v_fu_1029_p3;
reg   [31:0] bus_line_V_mid2_v_reg_1743;
wire   [4:0] k_3_fu_1037_p2;
wire   [3:0] tmp_89_fu_1043_p1;
reg   [3:0] tmp_89_reg_1754;
reg   [3:0] tmp_89_reg_1754_pp2_iter1_reg;
reg   [3:0] tmp_89_reg_1754_pp2_iter2_reg;
reg   [511:0] i_source_Out_pass_In_input_stage_mem_burst_buffer_V_load_reg_1765;
reg    ap_enable_reg_pp2_iter2;
wire   [9:0] high_range_2_fu_1076_p2;
reg   [9:0] high_range_2_reg_1771;
wire   [9:0] tmp_99_fu_1154_p2;
reg   [9:0] tmp_99_reg_1778;
wire   [511:0] tmp_102_fu_1164_p2;
reg   [511:0] tmp_102_reg_1783;
reg   [511:0] last_bus_line_V_reg_1794;
wire   [0:0] exitcond1_fu_1200_p2;
wire    ap_CS_fsm_pp3_stage0;
wire    ap_block_state40_pp3_stage0_iter0;
wire    ap_block_state41_pp3_stage0_iter1;
reg    ap_block_state42_pp3_stage0_iter2;
reg    ap_block_pp3_stage0_11001;
wire   [3:0] k_2_fu_1205_p2;
reg   [3:0] k_2_reg_1805;
reg    ap_enable_reg_pp3_iter0;
wire   [8:0] high_range_1_fu_1233_p2;
reg   [8:0] high_range_1_reg_1810;
wire   [9:0] tmp_81_fu_1309_p2;
reg   [9:0] tmp_81_reg_1816;
wire   [511:0] tmp_84_fu_1319_p2;
reg   [511:0] tmp_84_reg_1821;
wire   [63:0] val_assign_1_fu_1347_p2;
reg   [63:0] val_assign_1_reg_1826;
reg    ap_sig_ioackin_source_Out_pass_In_AWREADY;
wire   [31:0] return_code_1_i_cast_fu_1376_p1;
reg    ap_predicate_op333_writeresp_state49;
reg    ap_block_state49;
reg   [31:0] tmp_4_reg_1835;
wire    ap_CS_fsm_state50;
wire   [31:0] bus_lines_to_skip_0_i_fu_1411_p3;
reg   [31:0] bus_lines_to_skip_0_i_reg_1840;
wire    ap_CS_fsm_state51;
wire   [0:0] tmp_7_fu_1419_p2;
reg   [0:0] tmp_7_reg_1846;
wire   [31:0] tmp_s_fu_1424_p2;
reg   [31:0] tmp_s_reg_1850;
wire    ap_CS_fsm_state52;
wire   [58:0] source_Out_pass_In_buffer_V4_sum7_fu_1432_p2;
reg   [58:0] source_Out_pass_In_buffer_V4_sum7_reg_1855;
wire    ap_CS_fsm_state53;
reg   [511:0] source_Out_pass_In_addr_1_read_reg_1866;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state7;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
wire    ap_CS_fsm_state20;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state21;
reg    ap_enable_reg_pp1_iter2;
reg    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state25;
reg    ap_enable_reg_pp2_iter1;
reg    ap_enable_reg_pp2_iter3;
wire    ap_CS_fsm_state39;
reg    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state40;
reg    ap_enable_reg_pp3_iter1;
reg   [15:0] ap_phi_mux_k_0_i_phi_fu_334_p4;
reg   [0:0] i_source_Out_pass_In_input_stage_mem_partial_bus_line_len_flag_reg_341;
wire    ap_CS_fsm_state11;
wire   [3:0] tmp_27_fu_910_p2;
reg   [3:0] i_source_Out_pass_In_input_stage_mem_partial_bus_line_len_new_reg_354;
reg   [31:0] i_0_i_reg_366;
wire    ap_CS_fsm_state30;
reg   [31:0] ap_phi_mux_j_0_i_phi_fu_381_p4;
reg   [31:0] ap_phi_mux_j1_0_i_phi_fu_404_p4;
reg   [3:0] ap_phi_mux_k7_0_i_phi_fu_426_p4;
reg   [3:0] i_source_Out_pass_In_input_stage_mem_partial_bus_line_len_new_1_reg_434;
reg   [0:0] i_source_Out_pass_In_input_stage_mem_partial_bus_line_len_flag_1_reg_445;
reg   [0:0] ap_phi_mux_i_source_Out_pass_In_input_stage_mem_partial_bus_line_len_flag_2_phi_fu_462_p6;
reg   [0:0] i_source_Out_pass_In_input_stage_mem_partial_bus_line_len_flag_2_reg_457;
reg   [3:0] ap_phi_mux_i_source_Out_pass_In_input_stage_mem_partial_bus_line_len_new_2_phi_fu_477_p6;
reg   [3:0] i_source_Out_pass_In_input_stage_mem_partial_bus_line_len_new_2_reg_473;
reg   [1:0] ap_phi_mux_return_code_1_i_phi_fu_492_p6;
reg   [1:0] return_code_1_i_reg_487;
wire   [63:0] tmp_36_fu_986_p1;
wire   [63:0] bus_line_V_mid2_fu_1047_p1;
wire   [63:0] tmp_2_fu_565_p1;
wire   [63:0] source_Out_pass_In_buffer_V4_sum7_cast_fu_1437_p1;
reg    ap_reg_ioackin_source_Out_pass_In_ARREADY;
reg    ap_reg_ioackin_source_Out_pass_In_AWREADY;
reg    ap_reg_ioackin_source_Out_pass_In_WREADY;
reg    ap_sig_ioackin_source_Out_pass_In_WREADY;
wire   [511:0] p_025_0_i_fu_1372_p1;
wire   [511:0] p_051_0_i_fu_1461_p1;
wire   [31:0] tmp_val_fu_905_p1;
reg    ap_block_pp0_stage0_01001;
wire   [31:0] tmp_val_1_fu_1184_p1;
reg    ap_block_pp2_stage0_01001;
wire   [31:0] tmp_val_2_fu_1339_p1;
reg    ap_block_pp3_stage0_01001;
wire   [63:0] tmp_47_fu_1361_p2;
wire   [63:0] tmp_15_fu_1452_p1;
wire   [0:0] tmp_fu_503_p2;
wire   [31:0] tmp_1_fu_509_p2;
wire   [31:0] tmp_5_fu_527_p1;
wire   [57:0] source_Out_pass_In_buffer_V3_fu_537_p4;
wire   [57:0] source_Out_pass_In_size_V1_fu_555_p4;
wire   [0:0] tmp_3_fu_575_p2;
wire   [4:0] tmp_12_cast_cast_fu_610_p1;
wire   [4:0] tokens_on_device_fu_613_p2;
wire   [4:0] stream_prologue_size_fu_619_p3;
wire   [31:0] tokens_in_memory_2_fu_641_p3;
wire   [31:0] tokens_in_memory_3_fu_652_p3;
wire   [31:0] stream_prologue_size_1_fu_647_p3;
wire   [31:0] tmp_16_fu_675_p2;
wire   [28:0] tmp_19_cast_fu_691_p1;
wire   [28:0] bus_lines_to_read_fu_694_p2;
wire   [28:0] full_bus_lines_to_read_1_fu_722_p2;
wire   [29:0] full_bus_lines_to_read_cast5_fu_714_p1;
wire  signed [29:0] full_bus_lines_to_read_1_cast_fu_727_p1;
wire   [29:0] full_bus_lines_to_read_2_fu_731_p3;
wire   [31:0] tmp_12_fu_711_p1;
wire   [31:0] tmp_21_fu_754_p1;
wire   [10:0] tmp_33_fu_769_p1;
wire   [12:0] tmp_24_fu_773_p3;
wire   [15:0] tmp_26_fu_787_p3;
wire   [15:0] low_range_fu_800_p2;
wire   [15:0] high_range_fu_794_p2;
wire   [4:0] tmp_42_fu_812_p1;
wire   [9:0] tmp_57_fu_848_p2;
wire   [9:0] tmp_59_fu_852_p2;
reg   [511:0] tmp_54_fu_838_p4;
wire   [9:0] tmp_60_fu_856_p3;
wire   [9:0] tmp_62_fu_870_p3;
wire   [511:0] tmp_61_fu_863_p3;
wire   [511:0] tmp_64_fu_881_p1;
wire   [511:0] tmp_65_fu_891_p1;
wire   [511:0] tmp_67_fu_894_p2;
wire   [511:0] p_Result_s_fu_900_p2;
wire   [63:0] tmp_32_fu_936_p1;
wire   [63:0] tmp_35_fu_940_p2;
wire   [63:0] tmp_34_fu_950_p1;
wire   [63:0] last_address_fu_953_p2;
wire   [0:0] exitcond_fu_1009_p2;
wire   [31:0] j_s_fu_1023_p2;
wire   [4:0] k2_0_i_mid2_fu_1015_p3;
wire   [5:0] tmp_49_fu_1051_p3;
wire   [6:0] tmp_65_cast3_fu_1058_p1;
wire   [6:0] tmp_53_fu_1062_p2;
wire   [9:0] tmp_51_fu_1068_p3;
wire   [8:0] low_range_2_fu_1082_p3;
wire   [31:0] Lo_assign_1_fu_1092_p1;
wire   [31:0] Hi_assign_1_fu_1089_p1;
wire   [9:0] tmp_91_fu_1102_p1;
wire   [0:0] tmp_90_fu_1096_p2;
wire   [9:0] tmp_93_fu_1115_p2;
wire   [9:0] tmp_95_fu_1126_p2;
reg   [511:0] tmp_92_fu_1106_p4;
wire   [9:0] tmp_94_fu_1120_p2;
wire   [9:0] tmp_96_fu_1131_p3;
wire   [9:0] tmp_98_fu_1146_p3;
wire   [511:0] tmp_97_fu_1139_p3;
wire   [511:0] tmp_100_fu_1160_p1;
wire   [511:0] tmp_101_fu_1170_p1;
wire   [511:0] tmp_103_fu_1173_p2;
wire   [511:0] p_Result_2_fu_1179_p2;
wire   [5:0] tmp_43_fu_1211_p3;
wire   [5:0] tmp_44_fu_1219_p2;
wire   [8:0] tmp_41_fu_1225_p3;
wire   [8:0] low_range_1_fu_1239_p3;
wire   [9:0] tmp_72_fu_1252_p1;
wire   [9:0] tmp_73_fu_1256_p1;
wire   [0:0] tmp_71_fu_1247_p2;
wire   [9:0] tmp_75_fu_1268_p2;
wire   [9:0] tmp_77_fu_1280_p2;
reg   [511:0] tmp_74_fu_1259_p4;
wire   [9:0] tmp_76_fu_1274_p2;
wire   [9:0] tmp_78_fu_1286_p3;
wire   [9:0] tmp_80_fu_1301_p3;
wire   [511:0] tmp_79_fu_1294_p3;
wire   [511:0] tmp_82_fu_1315_p1;
wire   [511:0] tmp_83_fu_1325_p1;
wire   [511:0] tmp_85_fu_1328_p2;
wire   [511:0] p_Result_1_fu_1334_p2;
wire   [63:0] tmp_45_fu_1344_p1;
wire   [63:0] tmp_46_fu_1358_p1;
wire   [63:0] tmp_9_fu_1386_p2;
wire   [0:0] tmp_8_fu_1401_p2;
wire   [31:0] bus_lines_to_skip_fu_1406_p2;
wire   [58:0] tmp_11_cast_fu_1429_p1;
wire    ap_CS_fsm_state69;
reg   [57:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;

// power-on initialization
initial begin
#0 ap_CS_fsm = 58'd1;
#0 i_source_Out_pass_In_input_stage_mem_tokens_read = 64'd0;
#0 i_source_Out_pass_In_input_stage_mem_partial_bus_line_len = 4'd0;
#0 i_source_Out_pass_In_input_stage_mem_partial_bus_line_bus_line_V = 512'd0;
#0 i_source_Out_pass_In_input_stage_mem_bus_lines_read = 64'd0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp2_iter4 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_reg_ioackin_source_Out_pass_In_ARREADY = 1'b0;
#0 ap_reg_ioackin_source_Out_pass_In_AWREADY = 1'b0;
#0 ap_reg_ioackin_source_Out_pass_In_WREADY = 1'b0;
end

source_Out_pass_In_input_stage_mem_i_source_Out_pass_In_input_stage_mem_burst_buffer_V #(
    .DataWidth( 512 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
i_source_Out_pass_In_input_stage_mem_burst_buffer_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(i_source_Out_pass_In_input_stage_mem_burst_buffer_V_address0),
    .ce0(i_source_Out_pass_In_input_stage_mem_burst_buffer_V_ce0),
    .we0(i_source_Out_pass_In_input_stage_mem_burst_buffer_V_we0),
    .d0(source_Out_pass_In_addr_2_read_reg_1724),
    .q0(i_source_Out_pass_In_input_stage_mem_burst_buffer_V_q0)
);

source_Out_pass_In_input_stage_mem_source_Out_pass_In_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 512 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 256 ),
    .MAX_WRITE_BURST_LENGTH( 256 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_SOURCE_OUT_PASS_IN_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_SOURCE_OUT_PASS_IN_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_SOURCE_OUT_PASS_IN_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_SOURCE_OUT_PASS_IN_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_SOURCE_OUT_PASS_IN_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_SOURCE_OUT_PASS_IN_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_SOURCE_OUT_PASS_IN_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_SOURCE_OUT_PASS_IN_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_SOURCE_OUT_PASS_IN_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_SOURCE_OUT_PASS_IN_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_SOURCE_OUT_PASS_IN_CACHE_VALUE ))
source_Out_pass_In_input_stage_mem_source_Out_pass_In_m_axi_U(
    .AWVALID(m_axi_source_Out_pass_In_AWVALID),
    .AWREADY(m_axi_source_Out_pass_In_AWREADY),
    .AWADDR(m_axi_source_Out_pass_In_AWADDR),
    .AWID(m_axi_source_Out_pass_In_AWID),
    .AWLEN(m_axi_source_Out_pass_In_AWLEN),
    .AWSIZE(m_axi_source_Out_pass_In_AWSIZE),
    .AWBURST(m_axi_source_Out_pass_In_AWBURST),
    .AWLOCK(m_axi_source_Out_pass_In_AWLOCK),
    .AWCACHE(m_axi_source_Out_pass_In_AWCACHE),
    .AWPROT(m_axi_source_Out_pass_In_AWPROT),
    .AWQOS(m_axi_source_Out_pass_In_AWQOS),
    .AWREGION(m_axi_source_Out_pass_In_AWREGION),
    .AWUSER(m_axi_source_Out_pass_In_AWUSER),
    .WVALID(m_axi_source_Out_pass_In_WVALID),
    .WREADY(m_axi_source_Out_pass_In_WREADY),
    .WDATA(m_axi_source_Out_pass_In_WDATA),
    .WSTRB(m_axi_source_Out_pass_In_WSTRB),
    .WLAST(m_axi_source_Out_pass_In_WLAST),
    .WID(m_axi_source_Out_pass_In_WID),
    .WUSER(m_axi_source_Out_pass_In_WUSER),
    .ARVALID(m_axi_source_Out_pass_In_ARVALID),
    .ARREADY(m_axi_source_Out_pass_In_ARREADY),
    .ARADDR(m_axi_source_Out_pass_In_ARADDR),
    .ARID(m_axi_source_Out_pass_In_ARID),
    .ARLEN(m_axi_source_Out_pass_In_ARLEN),
    .ARSIZE(m_axi_source_Out_pass_In_ARSIZE),
    .ARBURST(m_axi_source_Out_pass_In_ARBURST),
    .ARLOCK(m_axi_source_Out_pass_In_ARLOCK),
    .ARCACHE(m_axi_source_Out_pass_In_ARCACHE),
    .ARPROT(m_axi_source_Out_pass_In_ARPROT),
    .ARQOS(m_axi_source_Out_pass_In_ARQOS),
    .ARREGION(m_axi_source_Out_pass_In_ARREGION),
    .ARUSER(m_axi_source_Out_pass_In_ARUSER),
    .RVALID(m_axi_source_Out_pass_In_RVALID),
    .RREADY(m_axi_source_Out_pass_In_RREADY),
    .RDATA(m_axi_source_Out_pass_In_RDATA),
    .RLAST(m_axi_source_Out_pass_In_RLAST),
    .RID(m_axi_source_Out_pass_In_RID),
    .RUSER(m_axi_source_Out_pass_In_RUSER),
    .RRESP(m_axi_source_Out_pass_In_RRESP),
    .BVALID(m_axi_source_Out_pass_In_BVALID),
    .BREADY(m_axi_source_Out_pass_In_BREADY),
    .BRESP(m_axi_source_Out_pass_In_BRESP),
    .BID(m_axi_source_Out_pass_In_BID),
    .BUSER(m_axi_source_Out_pass_In_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(source_Out_pass_In_ARVALID),
    .I_ARREADY(source_Out_pass_In_ARREADY),
    .I_ARADDR(source_Out_pass_In_ARADDR),
    .I_ARID(1'd0),
    .I_ARLEN(source_Out_pass_In_ARLEN),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(source_Out_pass_In_RVALID),
    .I_RREADY(source_Out_pass_In_RREADY),
    .I_RDATA(source_Out_pass_In_RDATA),
    .I_RID(source_Out_pass_In_RID),
    .I_RUSER(source_Out_pass_In_RUSER),
    .I_RRESP(source_Out_pass_In_RRESP),
    .I_RLAST(source_Out_pass_In_RLAST),
    .I_AWVALID(source_Out_pass_In_AWVALID),
    .I_AWREADY(source_Out_pass_In_AWREADY),
    .I_AWADDR(source_Out_pass_In_addr_reg_1493),
    .I_AWID(1'd0),
    .I_AWLEN(32'd1),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(source_Out_pass_In_WVALID),
    .I_WREADY(source_Out_pass_In_WREADY),
    .I_WDATA(source_Out_pass_In_WDATA),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(64'd18446744073709551615),
    .I_BVALID(source_Out_pass_In_BVALID),
    .I_BREADY(source_Out_pass_In_BREADY),
    .I_BRESP(source_Out_pass_In_BRESP),
    .I_BID(source_Out_pass_In_BID),
    .I_BUSER(source_Out_pass_In_BUSER)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state7) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state6) & (tmp_10_reg_1539 == 1'd0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state7)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state7);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end else if (((1'b1 == ap_CS_fsm_state6) & (tmp_10_reg_1539 == 1'd0))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state21) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state20)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state21)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state21);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end else if ((1'b1 == ap_CS_fsm_state20)) begin
            ap_enable_reg_pp1_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state25) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state24)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state25)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state25);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
        end else if ((1'b1 == ap_CS_fsm_state24)) begin
            ap_enable_reg_pp2_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_condition_pp3_exit_iter0_state40) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state39)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter0_state40)) begin
                ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state40);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end else if ((1'b1 == ap_CS_fsm_state39)) begin
            ap_enable_reg_pp3_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_source_Out_pass_In_ARREADY <= 1'b0;
    end else begin
        if ((((ap_sig_ioackin_source_Out_pass_In_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state31)) | ((ap_sig_ioackin_source_Out_pass_In_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state14)) | ((ap_sig_ioackin_source_Out_pass_In_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state54)))) begin
            ap_reg_ioackin_source_Out_pass_In_ARREADY <= 1'b0;
        end else if ((((source_Out_pass_In_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state31)) | ((source_Out_pass_In_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state14)) | ((source_Out_pass_In_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state54)))) begin
            ap_reg_ioackin_source_Out_pass_In_ARREADY <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_source_Out_pass_In_AWREADY <= 1'b0;
    end else begin
        if ((((ap_sig_ioackin_source_Out_pass_In_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state43)) | ((ap_sig_ioackin_source_Out_pass_In_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state62)))) begin
            ap_reg_ioackin_source_Out_pass_In_AWREADY <= 1'b0;
        end else if ((((source_Out_pass_In_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state43)) | ((source_Out_pass_In_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state62)))) begin
            ap_reg_ioackin_source_Out_pass_In_AWREADY <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_source_Out_pass_In_WREADY <= 1'b0;
    end else begin
        if ((((ap_sig_ioackin_source_Out_pass_In_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state44)) | ((ap_sig_ioackin_source_Out_pass_In_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state63)))) begin
            ap_reg_ioackin_source_Out_pass_In_WREADY <= 1'b0;
        end else if ((((source_Out_pass_In_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state44)) | ((source_Out_pass_In_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state63)))) begin
            ap_reg_ioackin_source_Out_pass_In_WREADY <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        i_0_i_reg_366 <= i_reg_1677;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        i_0_i_reg_366 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_sig_ioackin_source_Out_pass_In_AWREADY == 1'b1)) begin
        if ((1'b1 == ap_CS_fsm_state62)) begin
            i_source_Out_pass_In_input_stage_mem_bus_lines_read <= tmp_15_fu_1452_p1;
        end else if ((1'b1 == ap_CS_fsm_state43)) begin
            i_source_Out_pass_In_input_stage_mem_bus_lines_read <= tmp_47_fu_1361_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_sig_ioackin_source_Out_pass_In_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state62) & (tmp_7_reg_1846 == 1'd0))) begin
        i_source_Out_pass_In_input_stage_mem_partial_bus_line_bus_line_V <= source_Out_pass_In_addr_1_read_reg_1866;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        i_source_Out_pass_In_input_stage_mem_partial_bus_line_bus_line_V <= last_bus_line_V_reg_1794;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_sig_ioackin_source_Out_pass_In_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state43) & (tmp_17_reg_1598 == 1'd0))) begin
        i_source_Out_pass_In_input_stage_mem_partial_bus_line_len_flag_1_reg_445 <= 1'd1;
    end else if (((tmp_17_reg_1598 == 1'd1) & (1'b1 == ap_CS_fsm_state12) & (tmp_28_fu_915_p2 == 1'd0))) begin
        i_source_Out_pass_In_input_stage_mem_partial_bus_line_len_flag_1_reg_445 <= i_source_Out_pass_In_input_stage_mem_partial_bus_line_len_flag_reg_341;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_predicate_op333_writeresp_state49 == 1'b1) & (source_Out_pass_In_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state49) & (can_read_reg_1509 == 1'd0) & (tmp_107_reg_1513 == 1'd0))) begin
        i_source_Out_pass_In_input_stage_mem_partial_bus_line_len_flag_2_reg_457 <= i_source_Out_pass_In_input_stage_mem_partial_bus_line_len_flag_1_reg_445;
    end else if (((can_read_reg_1509 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        i_source_Out_pass_In_input_stage_mem_partial_bus_line_len_flag_2_reg_457 <= 1'd0;
    end else if (((source_Out_pass_In_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state68))) begin
        i_source_Out_pass_In_input_stage_mem_partial_bus_line_len_flag_2_reg_457 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (tmp_10_reg_1539 == 1'd0))) begin
        i_source_Out_pass_In_input_stage_mem_partial_bus_line_len_flag_reg_341 <= 1'd1;
    end else if (((tmp_10_reg_1539 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        i_source_Out_pass_In_input_stage_mem_partial_bus_line_len_flag_reg_341 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_sig_ioackin_source_Out_pass_In_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state43) & (tmp_17_reg_1598 == 1'd0))) begin
        i_source_Out_pass_In_input_stage_mem_partial_bus_line_len_new_1_reg_434 <= stream_epilogue_size_reg_1561;
    end else if (((tmp_17_reg_1598 == 1'd1) & (1'b1 == ap_CS_fsm_state12) & (tmp_28_fu_915_p2 == 1'd0))) begin
        i_source_Out_pass_In_input_stage_mem_partial_bus_line_len_new_1_reg_434 <= i_source_Out_pass_In_input_stage_mem_partial_bus_line_len_new_reg_354;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_predicate_op333_writeresp_state49 == 1'b1) & (source_Out_pass_In_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state49) & (can_read_reg_1509 == 1'd0) & (tmp_107_reg_1513 == 1'd0))) begin
        i_source_Out_pass_In_input_stage_mem_partial_bus_line_len_new_2_reg_473 <= i_source_Out_pass_In_input_stage_mem_partial_bus_line_len_new_1_reg_434;
    end else if (((source_Out_pass_In_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state68))) begin
        i_source_Out_pass_In_input_stage_mem_partial_bus_line_len_new_2_reg_473 <= partial_tokens_reg_1533;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_sig_ioackin_source_Out_pass_In_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state43))) begin
        i_source_Out_pass_In_input_stage_mem_tokens_read <= val_assign_1_fu_1347_p2;
    end else if ((~((source_Out_pass_In_offset_V_empty_n == 1'b0) & (tmp_107_nbreadreq_fu_230_p3 == 1'd1)) & (tmp_107_nbreadreq_fu_230_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        i_source_Out_pass_In_input_stage_mem_tokens_read <= source_Out_pass_In_offset_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond_flatten_fu_998_p2 == 1'd0))) begin
        indvar_flatten_reg_389 <= indvar_flatten_next_fu_1003_p2;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        indvar_flatten_reg_389 <= 36'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond_flatten_reg_1734 == 1'd0))) begin
        j1_0_i_reg_400 <= bus_line_V_mid2_v_reg_1743;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        j1_0_i_reg_400 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond77_i_reg_1715 == 1'd0))) begin
        j_0_i_reg_377 <= j_reg_1719;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        j_0_i_reg_377 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond_flatten_fu_998_p2 == 1'd0))) begin
        k2_0_i_reg_411 <= k_3_fu_1037_p2;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        k2_0_i_reg_411 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (exitcond1_reg_1801 == 1'd0))) begin
        k7_0_i_reg_422 <= k_2_reg_1805;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        k7_0_i_reg_422 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_22_reg_1625 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        k_0_i_reg_331 <= k_1_reg_1629;
    end else if (((1'b1 == ap_CS_fsm_state6) & (tmp_10_reg_1539 == 1'd0))) begin
        k_0_i_reg_331 <= k_fu_743_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((can_read_reg_1509 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                return_code_1_i_reg_487[1] <= 1'b0;
    end else if (((~((ap_predicate_op333_writeresp_state49 == 1'b1) & (source_Out_pass_In_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state49) & (can_read_reg_1509 == 1'd0) & (tmp_107_reg_1513 == 1'd0)) | ((source_Out_pass_In_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state68)))) begin
                return_code_1_i_reg_487[1] <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_predicate_op333_writeresp_state49 == 1'b1) & (source_Out_pass_In_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state49))) begin
        ap_return[1] <= return_code_1_i_cast_fu_1376_p1[1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        base_address_reg_1591 <= i_source_Out_pass_In_input_stage_mem_bus_lines_read;
        full_bus_lines_to_read_2_cast_reg_1602 <= full_bus_lines_to_read_2_cast_fu_739_p1;
        tmp_17_reg_1598 <= tmp_17_fu_717_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond_flatten_fu_998_p2 == 1'd0))) begin
        bus_line_V_mid2_v_reg_1743 <= bus_line_V_mid2_v_fu_1029_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        bus_lines_to_skip_0_i_reg_1840 <= bus_lines_to_skip_0_i_fu_1411_p3;
        tmp_7_reg_1846 <= tmp_7_fu_1419_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((source_Out_pass_In_offset_V_empty_n == 1'b0) & (tmp_107_nbreadreq_fu_230_p3 == 1'd1)) & (1'b1 == ap_CS_fsm_state2))) begin
        can_read_reg_1509 <= can_read_fu_585_p2;
        i_source_Out_pass_In_input_stage_mem_partial_bus_line_len_load_reg_1517 <= i_source_Out_pass_In_input_stage_mem_partial_bus_line_len;
        source_Out_pass_In_addr_reg_1493[57 : 0] <= tmp_2_fu_565_p1[57 : 0];
        stream_prologue_size_4_reg_1500 <= stream_prologue_size_4_fu_579_p3;
        tmp_107_reg_1513 <= source_Out_pass_In_offset_V_empty_n;
        tmp_6_cast_reg_1488[57 : 0] <= tmp_6_cast_fu_551_p1[57 : 0];
        tmp_6_reg_1482[57 : 0] <= tmp_6_fu_547_p1[57 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_28_fu_915_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
        chunk_size_reg_1687 <= chunk_size_fu_931_p2;
        i_reg_1677 <= i_fu_920_p2;
        source_Out_pass_In_buffer_V4_sum5_reg_1692 <= source_Out_pass_In_buffer_V4_sum5_fu_945_p2;
        tmp_31_reg_1682 <= tmp_31_fu_926_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        exitcond1_reg_1801 <= exitcond1_fu_1200_p2;
        exitcond1_reg_1801_pp3_iter1_reg <= exitcond1_reg_1801;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        exitcond77_i_reg_1715 <= exitcond77_i_fu_975_p2;
        exitcond77_i_reg_1715_pp1_iter1_reg <= exitcond77_i_reg_1715;
        j_0_i_reg_377_pp1_iter1_reg <= j_0_i_reg_377;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        exitcond_flatten_reg_1734 <= exitcond_flatten_fu_998_p2;
        exitcond_flatten_reg_1734_pp2_iter1_reg <= exitcond_flatten_reg_1734;
        tmp_89_reg_1754_pp2_iter1_reg <= tmp_89_reg_1754;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp2_stage0_11001)) begin
        exitcond_flatten_reg_1734_pp2_iter2_reg <= exitcond_flatten_reg_1734_pp2_iter1_reg;
        exitcond_flatten_reg_1734_pp2_iter3_reg <= exitcond_flatten_reg_1734_pp2_iter2_reg;
        tmp_89_reg_1754_pp2_iter2_reg <= tmp_89_reg_1754_pp2_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        fifo_space_reg_1465 <= fifo_space_fu_515_p3;
        i_source_Out_pass_In_input_stage_mem_tokens_read_load_reg_1471 <= i_source_Out_pass_In_input_stage_mem_tokens_read;
        tokens_left_reg_1476 <= tokens_left_fu_531_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        full_bus_lines_to_read_reg_1584 <= full_bus_lines_to_read_fu_700_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (exitcond1_fu_1200_p2 == 1'd0))) begin
        high_range_1_reg_1810[8 : 5] <= high_range_1_fu_1233_p2[8 : 5];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (exitcond_flatten_reg_1734_pp2_iter1_reg == 1'd0))) begin
        high_range_2_reg_1771[9 : 5] <= high_range_2_fu_1076_p2[9 : 5];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1) & (exitcond_flatten_reg_1734_pp2_iter1_reg == 1'd0))) begin
        i_source_Out_pass_In_input_stage_mem_burst_buffer_V_load_reg_1765 <= i_source_Out_pass_In_input_stage_mem_burst_buffer_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_predicate_op333_writeresp_state49 == 1'b1) & (source_Out_pass_In_BVALID == 1'b0)) & (ap_phi_mux_i_source_Out_pass_In_input_stage_mem_partial_bus_line_len_flag_2_phi_fu_462_p6 == 1'd1) & (1'b1 == ap_CS_fsm_state49))) begin
        i_source_Out_pass_In_input_stage_mem_partial_bus_line_len <= ap_phi_mux_i_source_Out_pass_In_input_stage_mem_partial_bus_line_len_new_2_phi_fu_477_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (tmp_10_reg_1539 == 1'd0))) begin
        i_source_Out_pass_In_input_stage_mem_partial_bus_line_len_new_reg_354 <= tmp_27_fu_910_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        j_reg_1719 <= j_fu_980_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_22_fu_758_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        k_1_reg_1629 <= k_1_fu_763_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        k_2_reg_1805 <= k_2_fu_1205_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((source_Out_pass_In_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state38))) begin
        last_bus_line_V_reg_1794 <= source_Out_pass_In_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        p_i_reg_1702 <= p_i_fu_963_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((source_Out_pass_In_offset_V_empty_n == 1'b0) & (tmp_107_nbreadreq_fu_230_p3 == 1'd1)) & (tmp_107_nbreadreq_fu_230_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        partial_tokens_reg_1533 <= partial_tokens_fu_601_p1;
        tmp_18_reg_1526 <= source_Out_pass_In_offset_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((source_Out_pass_In_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state61))) begin
        source_Out_pass_In_addr_1_read_reg_1866 <= source_Out_pass_In_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond77_i_reg_1715 == 1'd0))) begin
        source_Out_pass_In_addr_2_read_reg_1724 <= source_Out_pass_In_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        source_Out_pass_In_buffer_V4_sum7_reg_1855 <= source_Out_pass_In_buffer_V4_sum7_fu_1432_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & (tmp_28_fu_915_p2 == 1'd0) & (tmp_17_reg_1598 == 1'd0))) begin
        source_Out_pass_In_buffer_V4_sum_reg_1697 <= source_Out_pass_In_buffer_V4_sum_fu_958_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        stream_epilogue_size_reg_1561 <= stream_epilogue_size_fu_658_p1;
        stream_prologue_size_3_reg_1568 <= stream_prologue_size_3_fu_662_p3;
        tmp_14_reg_1574 <= tmp_14_fu_669_p2;
        tmp_19_reg_1579 <= {{tmp_16_fu_675_p2[31:4]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (can_read_reg_1509 == 1'd0))) begin
        stream_prologue_size_cast8_reg_1545[4 : 0] <= stream_prologue_size_cast8_fu_627_p1[4 : 0];
        tmp_10_reg_1539 <= tmp_10_fu_605_p2;
        tmp_13_reg_1550 <= tmp_13_fu_631_p2;
        tokens_in_memory_1_reg_1556 <= tokens_in_memory_1_fu_636_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (exitcond_flatten_reg_1734_pp2_iter2_reg == 1'd0))) begin
        tmp_102_reg_1783 <= tmp_102_fu_1164_p2;
        tmp_99_reg_1778[9 : 1] <= tmp_99_fu_1154_p2[9 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (tmp_10_reg_1539 == 1'd0))) begin
        tmp_20_reg_1620 <= tmp_20_fu_749_p2;
        tmp_30_reg_1615 <= tmp_30_fu_746_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_22_reg_1625 <= tmp_22_fu_758_p2;
        tmp_22_reg_1625_pp0_iter1_reg <= tmp_22_reg_1625;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        tmp_22_reg_1625_pp0_iter2_reg <= tmp_22_reg_1625_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_22_fu_758_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_25_reg_1634[12 : 2] <= tmp_25_fu_781_p2[12 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        tmp_37_reg_1729[35 : 4] <= tmp_37_fu_991_p3[35 : 4];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_22_reg_1625 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_39_reg_1639 <= tmp_39_fu_806_p2;
        tmp_50_reg_1646[9 : 5] <= tmp_50_fu_816_p3[9 : 5];
        tmp_52_reg_1653[9 : 5] <= tmp_52_fu_824_p1[9 : 5];
        tmp_58_reg_1659[9 : 5] <= tmp_58_fu_828_p2[9 : 5];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        tmp_4_reg_1835 <= {{tmp_9_fu_1386_p2[35:4]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_22_reg_1625_pp0_iter1_reg == 1'd1))) begin
        tmp_63_reg_1664[9 : 1] <= tmp_63_fu_875_p2[9 : 1];
        tmp_66_reg_1669 <= tmp_66_fu_885_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (exitcond1_reg_1801 == 1'd0))) begin
        tmp_81_reg_1816[9 : 1] <= tmp_81_fu_1309_p2[9 : 1];
        tmp_84_reg_1821 <= tmp_84_fu_1319_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond_flatten_fu_998_p2 == 1'd0))) begin
        tmp_89_reg_1754 <= tmp_89_fu_1043_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        tmp_s_reg_1850 <= tmp_s_fu_1424_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_sig_ioackin_source_Out_pass_In_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state43))) begin
        val_assign_1_reg_1826 <= val_assign_1_fu_1347_p2;
    end
end

always @ (*) begin
    if ((tmp_22_fu_758_p2 == 1'd0)) begin
        ap_condition_pp0_exit_iter0_state7 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state7 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond77_i_fu_975_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state21 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state21 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_flatten_fu_998_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state25 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state25 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond1_fu_1200_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state40 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state40 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter4 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) & (can_read_reg_1509 == 1'd0) & (tmp_107_reg_1513 == 1'd0))) begin
        ap_phi_mux_i_source_Out_pass_In_input_stage_mem_partial_bus_line_len_flag_2_phi_fu_462_p6 = i_source_Out_pass_In_input_stage_mem_partial_bus_line_len_flag_1_reg_445;
    end else begin
        ap_phi_mux_i_source_Out_pass_In_input_stage_mem_partial_bus_line_len_flag_2_phi_fu_462_p6 = i_source_Out_pass_In_input_stage_mem_partial_bus_line_len_flag_2_reg_457;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) & (can_read_reg_1509 == 1'd0) & (tmp_107_reg_1513 == 1'd0))) begin
        ap_phi_mux_i_source_Out_pass_In_input_stage_mem_partial_bus_line_len_new_2_phi_fu_477_p6 = i_source_Out_pass_In_input_stage_mem_partial_bus_line_len_new_1_reg_434;
    end else begin
        ap_phi_mux_i_source_Out_pass_In_input_stage_mem_partial_bus_line_len_new_2_phi_fu_477_p6 = i_source_Out_pass_In_input_stage_mem_partial_bus_line_len_new_2_reg_473;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond_flatten_reg_1734 == 1'd0))) begin
        ap_phi_mux_j1_0_i_phi_fu_404_p4 = bus_line_V_mid2_v_reg_1743;
    end else begin
        ap_phi_mux_j1_0_i_phi_fu_404_p4 = j1_0_i_reg_400;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond77_i_reg_1715 == 1'd0))) begin
        ap_phi_mux_j_0_i_phi_fu_381_p4 = j_reg_1719;
    end else begin
        ap_phi_mux_j_0_i_phi_fu_381_p4 = j_0_i_reg_377;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (exitcond1_reg_1801 == 1'd0))) begin
        ap_phi_mux_k7_0_i_phi_fu_426_p4 = k_2_reg_1805;
    end else begin
        ap_phi_mux_k7_0_i_phi_fu_426_p4 = k7_0_i_reg_422;
    end
end

always @ (*) begin
    if (((tmp_22_reg_1625 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_k_0_i_phi_fu_334_p4 = k_1_reg_1629;
    end else begin
        ap_phi_mux_k_0_i_phi_fu_334_p4 = k_0_i_reg_331;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) & (can_read_reg_1509 == 1'd0) & (tmp_107_reg_1513 == 1'd0))) begin
        ap_phi_mux_return_code_1_i_phi_fu_492_p6 = 2'd3;
    end else begin
        ap_phi_mux_return_code_1_i_phi_fu_492_p6 = return_code_1_i_reg_487;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_source_Out_pass_In_ARREADY == 1'b0)) begin
        ap_sig_ioackin_source_Out_pass_In_ARREADY = source_Out_pass_In_ARREADY;
    end else begin
        ap_sig_ioackin_source_Out_pass_In_ARREADY = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_source_Out_pass_In_AWREADY == 1'b0)) begin
        ap_sig_ioackin_source_Out_pass_In_AWREADY = source_Out_pass_In_AWREADY;
    end else begin
        ap_sig_ioackin_source_Out_pass_In_AWREADY = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_source_Out_pass_In_WREADY == 1'b0)) begin
        ap_sig_ioackin_source_Out_pass_In_WREADY = source_Out_pass_In_WREADY;
    end else begin
        ap_sig_ioackin_source_Out_pass_In_WREADY = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        i_source_Out_pass_In_input_stage_mem_burst_buffer_V_address0 = bus_line_V_mid2_fu_1047_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        i_source_Out_pass_In_input_stage_mem_burst_buffer_V_address0 = tmp_36_fu_986_p1;
    end else begin
        i_source_Out_pass_In_input_stage_mem_burst_buffer_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        i_source_Out_pass_In_input_stage_mem_burst_buffer_V_ce0 = 1'b1;
    end else begin
        i_source_Out_pass_In_input_stage_mem_burst_buffer_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (exitcond77_i_reg_1715_pp1_iter1_reg == 1'd0))) begin
        i_source_Out_pass_In_input_stage_mem_burst_buffer_V_we0 = 1'b1;
    end else begin
        i_source_Out_pass_In_input_stage_mem_burst_buffer_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_source_Out_pass_In_ARREADY == 1'b0)) begin
        if ((1'b1 == ap_CS_fsm_state54)) begin
            source_Out_pass_In_ARADDR = source_Out_pass_In_buffer_V4_sum7_cast_fu_1437_p1;
        end else if ((1'b1 == ap_CS_fsm_state31)) begin
            source_Out_pass_In_ARADDR = source_Out_pass_In_buffer_V4_sum_reg_1697;
        end else if ((1'b1 == ap_CS_fsm_state14)) begin
            source_Out_pass_In_ARADDR = source_Out_pass_In_buffer_V4_sum5_reg_1692;
        end else begin
            source_Out_pass_In_ARADDR = 'bx;
        end
    end else begin
        source_Out_pass_In_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((ap_reg_ioackin_source_Out_pass_In_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state31)) | ((ap_reg_ioackin_source_Out_pass_In_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state54)))) begin
        source_Out_pass_In_ARLEN = 32'd1;
    end else if (((ap_reg_ioackin_source_Out_pass_In_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state14))) begin
        source_Out_pass_In_ARLEN = p_i_reg_1702;
    end else begin
        source_Out_pass_In_ARLEN = 'bx;
    end
end

always @ (*) begin
    if ((((ap_reg_ioackin_source_Out_pass_In_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state31)) | ((ap_reg_ioackin_source_Out_pass_In_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state14)) | ((ap_reg_ioackin_source_Out_pass_In_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state54)))) begin
        source_Out_pass_In_ARVALID = 1'b1;
    end else begin
        source_Out_pass_In_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_reg_ioackin_source_Out_pass_In_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state43)) | ((ap_reg_ioackin_source_Out_pass_In_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state62)))) begin
        source_Out_pass_In_AWVALID = 1'b1;
    end else begin
        source_Out_pass_In_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((~((ap_predicate_op333_writeresp_state49 == 1'b1) & (source_Out_pass_In_BVALID == 1'b0)) & (ap_predicate_op333_writeresp_state49 == 1'b1) & (1'b1 == ap_CS_fsm_state49)) | ((source_Out_pass_In_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state68)))) begin
        source_Out_pass_In_BREADY = 1'b1;
    end else begin
        source_Out_pass_In_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((source_Out_pass_In_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state38)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond77_i_reg_1715 == 1'd0)) | ((source_Out_pass_In_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state61)))) begin
        source_Out_pass_In_RREADY = 1'b1;
    end else begin
        source_Out_pass_In_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter2 == 1'b1) & (exitcond1_reg_1801_pp3_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter4 == 1'b1) & (exitcond_flatten_reg_1734_pp2_iter3_reg == 1'd0)) | ((tmp_22_reg_1625_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        source_Out_pass_In_V_blk_n = source_Out_pass_In_V_full_n;
    end else begin
        source_Out_pass_In_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_01001) & (ap_enable_reg_pp3_iter2 == 1'b1) & (exitcond1_reg_1801_pp3_iter1_reg == 1'd0))) begin
        source_Out_pass_In_V_din = tmp_val_2_fu_1339_p1;
    end else if (((1'b0 == ap_block_pp2_stage0_01001) & (ap_enable_reg_pp2_iter4 == 1'b1) & (exitcond_flatten_reg_1734_pp2_iter3_reg == 1'd0))) begin
        source_Out_pass_In_V_din = tmp_val_1_fu_1184_p1;
    end else if (((1'b0 == ap_block_pp0_stage0_01001) & (tmp_22_reg_1625_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        source_Out_pass_In_V_din = tmp_val_fu_905_p1;
    end else begin
        source_Out_pass_In_V_din = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1) & (exitcond1_reg_1801_pp3_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter4 == 1'b1) & (exitcond_flatten_reg_1734_pp2_iter3_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (tmp_22_reg_1625_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        source_Out_pass_In_V_write = 1'b1;
    end else begin
        source_Out_pass_In_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_source_Out_pass_In_WREADY == 1'b0)) begin
        if ((1'b1 == ap_CS_fsm_state63)) begin
            source_Out_pass_In_WDATA = p_051_0_i_fu_1461_p1;
        end else if ((1'b1 == ap_CS_fsm_state44)) begin
            source_Out_pass_In_WDATA = p_025_0_i_fu_1372_p1;
        end else begin
            source_Out_pass_In_WDATA = 'bx;
        end
    end else begin
        source_Out_pass_In_WDATA = 'bx;
    end
end

always @ (*) begin
    if ((((ap_reg_ioackin_source_Out_pass_In_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state44)) | ((ap_reg_ioackin_source_Out_pass_In_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state63)))) begin
        source_Out_pass_In_WVALID = 1'b1;
    end else begin
        source_Out_pass_In_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state54))) begin
        source_Out_pass_In_blk_n_AR = m_axi_source_Out_pass_In_ARREADY;
    end else begin
        source_Out_pass_In_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state62))) begin
        source_Out_pass_In_blk_n_AW = m_axi_source_Out_pass_In_AWREADY;
    end else begin
        source_Out_pass_In_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state68) | ((1'b1 == ap_CS_fsm_state49) & (can_read_reg_1509 == 1'd0) & (tmp_107_reg_1513 == 1'd0)))) begin
        source_Out_pass_In_blk_n_B = m_axi_source_Out_pass_In_BVALID;
    end else begin
        source_Out_pass_In_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state61) | ((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond77_i_reg_1715 == 1'd0)))) begin
        source_Out_pass_In_blk_n_R = m_axi_source_Out_pass_In_RVALID;
    end else begin
        source_Out_pass_In_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state63))) begin
        source_Out_pass_In_blk_n_W = m_axi_source_Out_pass_In_WREADY;
    end else begin
        source_Out_pass_In_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_107_nbreadreq_fu_230_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        source_Out_pass_In_offset_V_blk_n = source_Out_pass_In_offset_V_empty_n;
    end else begin
        source_Out_pass_In_offset_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((source_Out_pass_In_offset_V_empty_n == 1'b0) & (tmp_107_nbreadreq_fu_230_p3 == 1'd1)) & (tmp_107_nbreadreq_fu_230_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        source_Out_pass_In_offset_V_read = 1'b1;
    end else begin
        source_Out_pass_In_offset_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~((source_Out_pass_In_offset_V_empty_n == 1'b0) & (tmp_107_nbreadreq_fu_230_p3 == 1'd1)) & (tmp_107_nbreadreq_fu_230_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end else if ((~((source_Out_pass_In_offset_V_empty_n == 1'b0) & (tmp_107_nbreadreq_fu_230_p3 == 1'd1)) & (1'b1 == ap_CS_fsm_state2) & (tmp_107_nbreadreq_fu_230_p3 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((can_read_reg_1509 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (tmp_10_reg_1539 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_22_fu_758_p2 == 1'd0)) & ~((ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_22_fu_758_p2 == 1'd0)) | ((ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((tmp_17_reg_1598 == 1'd1) & (1'b1 == ap_CS_fsm_state12) & (tmp_28_fu_915_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end else if (((1'b1 == ap_CS_fsm_state12) & (tmp_28_fu_915_p2 == 1'd0) & (tmp_17_reg_1598 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((ap_sig_ioackin_source_Out_pass_In_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (exitcond77_i_fu_975_p2 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (exitcond77_i_fu_975_p2 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (exitcond_flatten_fu_998_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1)) & ~((ap_enable_reg_pp2_iter3 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (exitcond_flatten_fu_998_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((ap_enable_reg_pp2_iter3 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state31 : begin
            if (((ap_sig_ioackin_source_Out_pass_In_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state31))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            if (((source_Out_pass_In_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state38))) begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (exitcond1_fu_1200_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1)) & ~((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (exitcond1_fu_1200_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1)) | ((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state43 : begin
            if (((ap_sig_ioackin_source_Out_pass_In_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state43))) begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end
        end
        ap_ST_fsm_state44 : begin
            if (((ap_sig_ioackin_source_Out_pass_In_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state44))) begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            if ((~((ap_predicate_op333_writeresp_state49 == 1'b1) & (source_Out_pass_In_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state49))) begin
                ap_NS_fsm = ap_ST_fsm_state69;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            if (((tmp_7_fu_1419_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state51))) begin
                ap_NS_fsm = ap_ST_fsm_state62;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            if (((ap_sig_ioackin_source_Out_pass_In_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state54))) begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            if (((source_Out_pass_In_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state61))) begin
                ap_NS_fsm = ap_ST_fsm_state62;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end
        end
        ap_ST_fsm_state62 : begin
            if (((ap_sig_ioackin_source_Out_pass_In_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state62))) begin
                ap_NS_fsm = ap_ST_fsm_state63;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state62;
            end
        end
        ap_ST_fsm_state63 : begin
            if (((ap_sig_ioackin_source_Out_pass_In_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state63))) begin
                ap_NS_fsm = ap_ST_fsm_state64;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state63;
            end
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            if (((source_Out_pass_In_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state68))) begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state68;
            end
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Hi_assign_1_fu_1089_p1 = high_range_2_reg_1771;

assign Lo_assign_1_fu_1092_p1 = low_range_2_fu_1082_p3;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd57];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((source_Out_pass_In_V_full_n == 1'b0) & (tmp_22_reg_1625_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((source_Out_pass_In_V_full_n == 1'b0) & (tmp_22_reg_1625_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((source_Out_pass_In_V_full_n == 1'b0) & (tmp_22_reg_1625_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((source_Out_pass_In_RVALID == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (exitcond77_i_reg_1715 == 1'd0));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((source_Out_pass_In_RVALID == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (exitcond77_i_reg_1715 == 1'd0));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage0_01001 = ((source_Out_pass_In_V_full_n == 1'b0) & (ap_enable_reg_pp2_iter4 == 1'b1) & (exitcond_flatten_reg_1734_pp2_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_block_pp2_stage0_11001 = ((source_Out_pass_In_V_full_n == 1'b0) & (ap_enable_reg_pp2_iter4 == 1'b1) & (exitcond_flatten_reg_1734_pp2_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_block_pp2_stage0_subdone = ((source_Out_pass_In_V_full_n == 1'b0) & (ap_enable_reg_pp2_iter4 == 1'b1) & (exitcond_flatten_reg_1734_pp2_iter3_reg == 1'd0));
end

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage0_01001 = ((source_Out_pass_In_V_full_n == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b1) & (exitcond1_reg_1801_pp3_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_pp3_stage0_11001 = ((source_Out_pass_In_V_full_n == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b1) & (exitcond1_reg_1801_pp3_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_pp3_stage0_subdone = ((source_Out_pass_In_V_full_n == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b1) & (exitcond1_reg_1801_pp3_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_state10_pp0_stage0_iter3 = ((source_Out_pass_In_V_full_n == 1'b0) & (tmp_22_reg_1625_pp0_iter2_reg == 1'd1));
end

always @ (*) begin
    ap_block_state2 = ((source_Out_pass_In_offset_V_empty_n == 1'b0) & (tmp_107_nbreadreq_fu_230_p3 == 1'd1));
end

assign ap_block_state21_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state22_pp1_stage0_iter1 = ((source_Out_pass_In_RVALID == 1'b0) & (exitcond77_i_reg_1715 == 1'd0));
end

assign ap_block_state23_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp2_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state29_pp2_stage0_iter4 = ((source_Out_pass_In_V_full_n == 1'b0) & (exitcond_flatten_reg_1734_pp2_iter3_reg == 1'd0));
end

assign ap_block_state40_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state42_pp3_stage0_iter2 = ((source_Out_pass_In_V_full_n == 1'b0) & (exitcond1_reg_1801_pp3_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_state49 = ((ap_predicate_op333_writeresp_state49 == 1'b1) & (source_Out_pass_In_BVALID == 1'b0));
end

assign ap_block_state7_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

always @ (*) begin
    ap_predicate_op333_writeresp_state49 = ((can_read_reg_1509 == 1'd0) & (tmp_107_reg_1513 == 1'd0));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign bus_line_V_mid2_fu_1047_p1 = bus_line_V_mid2_v_reg_1743;

assign bus_line_V_mid2_v_fu_1029_p3 = ((exitcond_fu_1009_p2[0:0] === 1'b1) ? j_s_fu_1023_p2 : ap_phi_mux_j1_0_i_phi_fu_404_p4);

assign bus_lines_to_read_fu_694_p2 = (29'd1 + tmp_19_cast_fu_691_p1);

assign bus_lines_to_skip_0_i_fu_1411_p3 = ((tmp_8_fu_1401_p2[0:0] === 1'b1) ? 32'd0 : bus_lines_to_skip_fu_1406_p2);

assign bus_lines_to_skip_fu_1406_p2 = (32'd1 + tmp_4_reg_1835);

assign can_read_fu_585_p2 = ((stream_prologue_size_4_fu_579_p3 == 32'd0) ? 1'b1 : 1'b0);

assign chunk_size_fu_931_p2 = ($signed(full_bus_lines_to_read_2_cast_reg_1602) - $signed(i_0_i_reg_366));

assign exitcond1_fu_1200_p2 = ((ap_phi_mux_k7_0_i_phi_fu_426_p4 == stream_epilogue_size_reg_1561) ? 1'b1 : 1'b0);

assign exitcond77_i_fu_975_p2 = ((ap_phi_mux_j_0_i_phi_fu_381_p4 == p_i_reg_1702) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_998_p2 = ((indvar_flatten_reg_389 == tmp_37_reg_1729) ? 1'b1 : 1'b0);

assign exitcond_fu_1009_p2 = ((k2_0_i_reg_411 == 5'd16) ? 1'b1 : 1'b0);

assign fifo_space_fu_515_p3 = ((tmp_fu_503_p2[0:0] === 1'b1) ? 32'd0 : tmp_1_fu_509_p2);

assign full_bus_lines_to_read_1_cast_fu_727_p1 = $signed(full_bus_lines_to_read_1_fu_722_p2);

assign full_bus_lines_to_read_1_fu_722_p2 = ($signed(29'd536870911) + $signed(full_bus_lines_to_read_reg_1584));

assign full_bus_lines_to_read_2_cast_fu_739_p1 = $signed(full_bus_lines_to_read_2_fu_731_p3);

assign full_bus_lines_to_read_2_fu_731_p3 = ((tmp_17_fu_717_p2[0:0] === 1'b1) ? full_bus_lines_to_read_cast5_fu_714_p1 : full_bus_lines_to_read_1_cast_fu_727_p1);

assign full_bus_lines_to_read_cast5_fu_714_p1 = full_bus_lines_to_read_reg_1584;

assign full_bus_lines_to_read_fu_700_p3 = ((tmp_14_reg_1574[0:0] === 1'b1) ? 29'd0 : bus_lines_to_read_fu_694_p2);

assign high_range_1_fu_1233_p2 = ($signed(9'd511) + $signed(tmp_41_fu_1225_p3));

assign high_range_2_fu_1076_p2 = ($signed(10'd1023) + $signed(tmp_51_fu_1068_p3));

assign high_range_fu_794_p2 = ($signed(16'd65535) + $signed(tmp_26_fu_787_p3));

assign i_fu_920_p2 = (i_0_i_reg_366 + 32'd64);

assign indvar_flatten_next_fu_1003_p2 = (indvar_flatten_reg_389 + 36'd1);

assign j_fu_980_p2 = (ap_phi_mux_j_0_i_phi_fu_381_p4 + 32'd1);

assign j_s_fu_1023_p2 = (32'd1 + ap_phi_mux_j1_0_i_phi_fu_404_p4);

assign k2_0_i_mid2_fu_1015_p3 = ((exitcond_fu_1009_p2[0:0] === 1'b1) ? 5'd0 : k2_0_i_reg_411);

assign k_1_fu_763_p2 = (16'd1 + ap_phi_mux_k_0_i_phi_fu_334_p4);

assign k_2_fu_1205_p2 = (ap_phi_mux_k7_0_i_phi_fu_426_p4 + 4'd1);

assign k_3_fu_1037_p2 = (5'd1 + k2_0_i_mid2_fu_1015_p3);

assign k_fu_743_p1 = i_source_Out_pass_In_input_stage_mem_partial_bus_line_len_load_reg_1517;

assign last_address_fu_953_p2 = (base_address_reg_1591 + tmp_34_fu_950_p1);

assign low_range_1_fu_1239_p3 = {{k7_0_i_reg_422}, {5'd0}};

assign low_range_2_fu_1082_p3 = {{tmp_89_reg_1754_pp2_iter2_reg}, {5'd0}};

assign low_range_fu_800_p2 = k_0_i_reg_331 << 16'd5;

assign p_025_0_i_fu_1372_p1 = val_assign_1_reg_1826;

assign p_051_0_i_fu_1461_p1 = tmp_18_reg_1526;

assign p_Result_1_fu_1334_p2 = (tmp_85_fu_1328_p2 & tmp_84_reg_1821);

assign p_Result_2_fu_1179_p2 = (tmp_103_fu_1173_p2 & tmp_102_reg_1783);

assign p_Result_s_fu_900_p2 = (tmp_67_fu_894_p2 & tmp_66_reg_1669);

assign p_i_fu_963_p3 = ((tmp_31_reg_1682[0:0] === 1'b1) ? 32'd64 : chunk_size_reg_1687);

assign partial_tokens_fu_601_p1 = source_Out_pass_In_offset_V_dout[3:0];

assign return_code_1_i_cast_fu_1376_p1 = ap_phi_mux_return_code_1_i_phi_fu_492_p6;

assign source_Out_pass_In_buffer_V3_fu_537_p4 = {{source_Out_pass_In_buffer_V[63:6]}};

assign source_Out_pass_In_buffer_V4_sum5_fu_945_p2 = (tmp_6_reg_1482 + tmp_35_fu_940_p2);

assign source_Out_pass_In_buffer_V4_sum7_cast_fu_1437_p1 = source_Out_pass_In_buffer_V4_sum7_reg_1855;

assign source_Out_pass_In_buffer_V4_sum7_fu_1432_p2 = (tmp_11_cast_fu_1429_p1 + tmp_6_cast_reg_1488);

assign source_Out_pass_In_buffer_V4_sum_fu_958_p2 = (tmp_6_reg_1482 + last_address_fu_953_p2);

assign source_Out_pass_In_size_V1_fu_555_p4 = {{source_Out_pass_In_size_V[63:6]}};

assign stream_epilogue_size_fu_658_p1 = tokens_in_memory_3_fu_652_p3[3:0];

assign stream_prologue_size_1_fu_647_p3 = ((tmp_13_reg_1550[0:0] === 1'b1) ? stream_prologue_size_4_reg_1500 : stream_prologue_size_cast8_reg_1545);

assign stream_prologue_size_3_fu_662_p3 = ((tmp_10_reg_1539[0:0] === 1'b1) ? 32'd0 : stream_prologue_size_1_fu_647_p3);

assign stream_prologue_size_4_fu_579_p3 = ((tmp_3_fu_575_p2[0:0] === 1'b1) ? fifo_space_reg_1465 : tokens_left_reg_1476);

assign stream_prologue_size_cast8_fu_627_p1 = stream_prologue_size_fu_619_p3;

assign stream_prologue_size_fu_619_p3 = ((tmp_10_fu_605_p2[0:0] === 1'b1) ? 5'd0 : tokens_on_device_fu_613_p2);

assign tmp_100_fu_1160_p1 = tmp_98_fu_1146_p3;

assign tmp_101_fu_1170_p1 = tmp_99_reg_1778;

assign tmp_102_fu_1164_p2 = tmp_97_fu_1139_p3 >> tmp_100_fu_1160_p1;

assign tmp_103_fu_1173_p2 = 512'd13407807929942597099574024998205846127479365820592393377723561443721764030073546976801874298166903427690031858186486050853753882811946569946433649006084095 >> tmp_101_fu_1170_p1;

assign tmp_107_nbreadreq_fu_230_p3 = source_Out_pass_In_offset_V_empty_n;

assign tmp_10_fu_605_p2 = ((i_source_Out_pass_In_input_stage_mem_partial_bus_line_len_load_reg_1517 == 4'd0) ? 1'b1 : 1'b0);

assign tmp_11_cast_fu_1429_p1 = tmp_s_reg_1850;

assign tmp_12_cast_cast_fu_610_p1 = i_source_Out_pass_In_input_stage_mem_partial_bus_line_len_load_reg_1517;

assign tmp_12_fu_711_p1 = i_source_Out_pass_In_input_stage_mem_partial_bus_line_len_load_reg_1517;

assign tmp_13_fu_631_p2 = ((stream_prologue_size_4_reg_1500 < stream_prologue_size_cast8_fu_627_p1) ? 1'b1 : 1'b0);

assign tmp_14_fu_669_p2 = ((tokens_in_memory_3_fu_652_p3 == 32'd0) ? 1'b1 : 1'b0);

assign tmp_15_fu_1452_p1 = bus_lines_to_skip_0_i_reg_1840;

assign tmp_16_fu_675_p2 = ($signed(32'd4294967295) + $signed(tokens_in_memory_3_fu_652_p3));

assign tmp_17_fu_717_p2 = ((stream_epilogue_size_reg_1561 == 4'd0) ? 1'b1 : 1'b0);

assign tmp_19_cast_fu_691_p1 = tmp_19_reg_1579;

assign tmp_1_fu_509_p2 = (fifo_size - fifo_count);

assign tmp_20_fu_749_p2 = (stream_prologue_size_3_reg_1568 + tmp_12_fu_711_p1);

assign tmp_21_fu_754_p1 = ap_phi_mux_k_0_i_phi_fu_334_p4;

assign tmp_22_fu_758_p2 = ((tmp_21_fu_754_p1 < tmp_20_reg_1620) ? 1'b1 : 1'b0);

assign tmp_24_fu_773_p3 = {{tmp_33_fu_769_p1}, {2'd0}};

assign tmp_25_fu_781_p2 = (13'd4 + tmp_24_fu_773_p3);

assign tmp_26_fu_787_p3 = {{tmp_25_reg_1634}, {3'd0}};

assign tmp_27_fu_910_p2 = (i_source_Out_pass_In_input_stage_mem_partial_bus_line_len_load_reg_1517 + tmp_30_reg_1615);

assign tmp_28_fu_915_p2 = ((i_0_i_reg_366 < full_bus_lines_to_read_2_cast_reg_1602) ? 1'b1 : 1'b0);

assign tmp_2_fu_565_p1 = source_Out_pass_In_size_V1_fu_555_p4;

assign tmp_30_fu_746_p1 = stream_prologue_size_3_reg_1568[3:0];

assign tmp_31_fu_926_p2 = ((i_fu_920_p2 < full_bus_lines_to_read_2_cast_reg_1602) ? 1'b1 : 1'b0);

assign tmp_32_fu_936_p1 = i_0_i_reg_366;

assign tmp_33_fu_769_p1 = ap_phi_mux_k_0_i_phi_fu_334_p4[10:0];

assign tmp_34_fu_950_p1 = $unsigned(full_bus_lines_to_read_2_cast_reg_1602);

assign tmp_35_fu_940_p2 = (tmp_32_fu_936_p1 + base_address_reg_1591);

assign tmp_36_fu_986_p1 = j_0_i_reg_377_pp1_iter1_reg;

assign tmp_37_fu_991_p3 = {{p_i_reg_1702}, {4'd0}};

assign tmp_39_fu_806_p2 = ((low_range_fu_800_p2 > high_range_fu_794_p2) ? 1'b1 : 1'b0);

assign tmp_3_fu_575_p2 = ((tokens_left_reg_1476 > fifo_space_reg_1465) ? 1'b1 : 1'b0);

assign tmp_41_fu_1225_p3 = {{tmp_44_fu_1219_p2}, {3'd0}};

assign tmp_42_fu_812_p1 = k_0_i_reg_331[4:0];

assign tmp_43_fu_1211_p3 = {{ap_phi_mux_k7_0_i_phi_fu_426_p4}, {2'd0}};

assign tmp_44_fu_1219_p2 = (6'd4 + tmp_43_fu_1211_p3);

assign tmp_45_fu_1344_p1 = stream_prologue_size_4_reg_1500;

assign tmp_46_fu_1358_p1 = full_bus_lines_to_read_reg_1584;

assign tmp_47_fu_1361_p2 = (base_address_reg_1591 + tmp_46_fu_1358_p1);

assign tmp_49_fu_1051_p3 = {{tmp_89_reg_1754_pp2_iter1_reg}, {2'd0}};

assign tmp_50_fu_816_p3 = {{tmp_42_fu_812_p1}, {5'd0}};

assign tmp_51_fu_1068_p3 = {{tmp_53_fu_1062_p2}, {3'd0}};

assign tmp_52_fu_824_p1 = high_range_fu_794_p2[9:0];

assign tmp_53_fu_1062_p2 = (7'd4 + tmp_65_cast3_fu_1058_p1);

integer ap_tvar_int_0;

always @ (i_source_Out_pass_In_input_stage_mem_partial_bus_line_bus_line_V) begin
    for (ap_tvar_int_0 = 512 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 511 - 0) begin
            tmp_54_fu_838_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            tmp_54_fu_838_p4[ap_tvar_int_0] = i_source_Out_pass_In_input_stage_mem_partial_bus_line_bus_line_V[511 - ap_tvar_int_0];
        end
    end
end

assign tmp_57_fu_848_p2 = (tmp_50_reg_1646 - tmp_52_reg_1653);

assign tmp_58_fu_828_p2 = (10'd511 - tmp_50_fu_816_p3);

assign tmp_59_fu_852_p2 = (tmp_52_reg_1653 - tmp_50_reg_1646);

assign tmp_5_fu_527_p1 = i_source_Out_pass_In_input_stage_mem_tokens_read[31:0];

assign tmp_60_fu_856_p3 = ((tmp_39_reg_1639[0:0] === 1'b1) ? tmp_57_fu_848_p2 : tmp_59_fu_852_p2);

assign tmp_61_fu_863_p3 = ((tmp_39_reg_1639[0:0] === 1'b1) ? tmp_54_fu_838_p4 : i_source_Out_pass_In_input_stage_mem_partial_bus_line_bus_line_V);

assign tmp_62_fu_870_p3 = ((tmp_39_reg_1639[0:0] === 1'b1) ? tmp_58_reg_1659 : tmp_50_reg_1646);

assign tmp_63_fu_875_p2 = (10'd511 - tmp_60_fu_856_p3);

assign tmp_64_fu_881_p1 = tmp_62_fu_870_p3;

assign tmp_65_cast3_fu_1058_p1 = tmp_49_fu_1051_p3;

assign tmp_65_fu_891_p1 = tmp_63_reg_1664;

assign tmp_66_fu_885_p2 = tmp_61_fu_863_p3 >> tmp_64_fu_881_p1;

assign tmp_67_fu_894_p2 = 512'd13407807929942597099574024998205846127479365820592393377723561443721764030073546976801874298166903427690031858186486050853753882811946569946433649006084095 >> tmp_65_fu_891_p1;

assign tmp_6_cast_fu_551_p1 = source_Out_pass_In_buffer_V3_fu_537_p4;

assign tmp_6_fu_547_p1 = source_Out_pass_In_buffer_V3_fu_537_p4;

assign tmp_71_fu_1247_p2 = ((low_range_1_fu_1239_p3 > high_range_1_reg_1810) ? 1'b1 : 1'b0);

assign tmp_72_fu_1252_p1 = low_range_1_fu_1239_p3;

assign tmp_73_fu_1256_p1 = high_range_1_reg_1810;

integer ap_tvar_int_1;

always @ (last_bus_line_V_reg_1794) begin
    for (ap_tvar_int_1 = 512 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 511 - 0) begin
            tmp_74_fu_1259_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            tmp_74_fu_1259_p4[ap_tvar_int_1] = last_bus_line_V_reg_1794[511 - ap_tvar_int_1];
        end
    end
end

assign tmp_75_fu_1268_p2 = (tmp_72_fu_1252_p1 - tmp_73_fu_1256_p1);

assign tmp_76_fu_1274_p2 = (tmp_72_fu_1252_p1 ^ 10'd511);

assign tmp_77_fu_1280_p2 = (tmp_73_fu_1256_p1 - tmp_72_fu_1252_p1);

assign tmp_78_fu_1286_p3 = ((tmp_71_fu_1247_p2[0:0] === 1'b1) ? tmp_75_fu_1268_p2 : tmp_77_fu_1280_p2);

assign tmp_79_fu_1294_p3 = ((tmp_71_fu_1247_p2[0:0] === 1'b1) ? tmp_74_fu_1259_p4 : last_bus_line_V_reg_1794);

assign tmp_7_fu_1419_p2 = ((partial_tokens_reg_1533 == 4'd0) ? 1'b1 : 1'b0);

assign tmp_80_fu_1301_p3 = ((tmp_71_fu_1247_p2[0:0] === 1'b1) ? tmp_76_fu_1274_p2 : tmp_72_fu_1252_p1);

assign tmp_81_fu_1309_p2 = (10'd511 - tmp_78_fu_1286_p3);

assign tmp_82_fu_1315_p1 = tmp_80_fu_1301_p3;

assign tmp_83_fu_1325_p1 = tmp_81_reg_1816;

assign tmp_84_fu_1319_p2 = tmp_79_fu_1294_p3 >> tmp_82_fu_1315_p1;

assign tmp_85_fu_1328_p2 = 512'd13407807929942597099574024998205846127479365820592393377723561443721764030073546976801874298166903427690031858186486050853753882811946569946433649006084095 >> tmp_83_fu_1325_p1;

assign tmp_89_fu_1043_p1 = k2_0_i_mid2_fu_1015_p3[3:0];

assign tmp_8_fu_1401_p2 = ((tmp_18_reg_1526 == 64'd0) ? 1'b1 : 1'b0);

assign tmp_90_fu_1096_p2 = ((Lo_assign_1_fu_1092_p1 > Hi_assign_1_fu_1089_p1) ? 1'b1 : 1'b0);

assign tmp_91_fu_1102_p1 = low_range_2_fu_1082_p3;

integer ap_tvar_int_2;

always @ (i_source_Out_pass_In_input_stage_mem_burst_buffer_V_load_reg_1765) begin
    for (ap_tvar_int_2 = 512 - 1; ap_tvar_int_2 >= 0; ap_tvar_int_2 = ap_tvar_int_2 - 1) begin
        if (ap_tvar_int_2 > 511 - 0) begin
            tmp_92_fu_1106_p4[ap_tvar_int_2] = 1'b0;
        end else begin
            tmp_92_fu_1106_p4[ap_tvar_int_2] = i_source_Out_pass_In_input_stage_mem_burst_buffer_V_load_reg_1765[511 - ap_tvar_int_2];
        end
    end
end

assign tmp_93_fu_1115_p2 = (tmp_91_fu_1102_p1 - high_range_2_reg_1771);

assign tmp_94_fu_1120_p2 = (tmp_91_fu_1102_p1 ^ 10'd511);

assign tmp_95_fu_1126_p2 = (high_range_2_reg_1771 - tmp_91_fu_1102_p1);

assign tmp_96_fu_1131_p3 = ((tmp_90_fu_1096_p2[0:0] === 1'b1) ? tmp_93_fu_1115_p2 : tmp_95_fu_1126_p2);

assign tmp_97_fu_1139_p3 = ((tmp_90_fu_1096_p2[0:0] === 1'b1) ? tmp_92_fu_1106_p4 : i_source_Out_pass_In_input_stage_mem_burst_buffer_V_load_reg_1765);

assign tmp_98_fu_1146_p3 = ((tmp_90_fu_1096_p2[0:0] === 1'b1) ? tmp_94_fu_1120_p2 : tmp_91_fu_1102_p1);

assign tmp_99_fu_1154_p2 = (10'd511 - tmp_96_fu_1131_p3);

assign tmp_9_fu_1386_p2 = (64'd68719476735 + tmp_18_reg_1526);

assign tmp_fu_503_p2 = ((fifo_count > fifo_size) ? 1'b1 : 1'b0);

assign tmp_s_fu_1424_p2 = ($signed(bus_lines_to_skip_0_i_reg_1840) + $signed(32'd4294967295));

assign tmp_val_1_fu_1184_p1 = p_Result_2_fu_1179_p2[31:0];

assign tmp_val_2_fu_1339_p1 = p_Result_1_fu_1334_p2[31:0];

assign tmp_val_fu_905_p1 = p_Result_s_fu_900_p2[31:0];

assign tokens_in_memory_1_fu_636_p2 = (stream_prologue_size_4_reg_1500 - stream_prologue_size_cast8_fu_627_p1);

assign tokens_in_memory_2_fu_641_p3 = ((tmp_13_reg_1550[0:0] === 1'b1) ? 32'd0 : tokens_in_memory_1_reg_1556);

assign tokens_in_memory_3_fu_652_p3 = ((tmp_10_reg_1539[0:0] === 1'b1) ? stream_prologue_size_4_reg_1500 : tokens_in_memory_2_fu_641_p3);

assign tokens_left_fu_531_p2 = (source_Out_pass_In_requested_size - tmp_5_fu_527_p1);

assign tokens_on_device_fu_613_p2 = ($signed(5'd16) - $signed(tmp_12_cast_cast_fu_610_p1));

assign val_assign_1_fu_1347_p2 = (i_source_Out_pass_In_input_stage_mem_tokens_read_load_reg_1471 + tmp_45_fu_1344_p1);

always @ (posedge ap_clk) begin
    ap_return[0] <= 1'b1;
    ap_return[31:2] <= 30'b000000000000000000000000000000;
    tmp_6_reg_1482[63:58] <= 6'b000000;
    tmp_6_cast_reg_1488[58] <= 1'b0;
    source_Out_pass_In_addr_reg_1493[63:58] <= 6'b000000;
    stream_prologue_size_cast8_reg_1545[31:5] <= 27'b000000000000000000000000000;
    tmp_25_reg_1634[1:0] <= 2'b00;
    tmp_50_reg_1646[4:0] <= 5'b00000;
    tmp_52_reg_1653[4:0] <= 5'b11111;
    tmp_58_reg_1659[4:0] <= 5'b11111;
    tmp_63_reg_1664[0] <= 1'b0;
    tmp_37_reg_1729[3:0] <= 4'b0000;
    high_range_2_reg_1771[4:0] <= 5'b11111;
    tmp_99_reg_1778[0] <= 1'b0;
    high_range_1_reg_1810[4:0] <= 5'b11111;
    tmp_81_reg_1816[0] <= 1'b0;
    return_code_1_i_reg_487[0] <= 1'b1;
end

endmodule //source_Out_pass_In_input_stage_mem
