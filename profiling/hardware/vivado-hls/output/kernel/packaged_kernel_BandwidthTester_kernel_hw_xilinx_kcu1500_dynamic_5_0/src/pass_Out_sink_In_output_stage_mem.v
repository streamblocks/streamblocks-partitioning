// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="pass_Out_sink_In_output_stage_mem,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcku115-flvb2104-2-e,HLS_INPUT_CLOCK=3.330000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.913750,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=45,HLS_SYN_DSP=0,HLS_SYN_FF=5226,HLS_SYN_LUT=23199,HLS_VERSION=2018_2}" *)

module pass_Out_sink_In_output_stage_mem (
        ap_clk,
        ap_rst_n,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_pass_Out_sink_In_AWVALID,
        m_axi_pass_Out_sink_In_AWREADY,
        m_axi_pass_Out_sink_In_AWADDR,
        m_axi_pass_Out_sink_In_AWID,
        m_axi_pass_Out_sink_In_AWLEN,
        m_axi_pass_Out_sink_In_AWSIZE,
        m_axi_pass_Out_sink_In_AWBURST,
        m_axi_pass_Out_sink_In_AWLOCK,
        m_axi_pass_Out_sink_In_AWCACHE,
        m_axi_pass_Out_sink_In_AWPROT,
        m_axi_pass_Out_sink_In_AWQOS,
        m_axi_pass_Out_sink_In_AWREGION,
        m_axi_pass_Out_sink_In_AWUSER,
        m_axi_pass_Out_sink_In_WVALID,
        m_axi_pass_Out_sink_In_WREADY,
        m_axi_pass_Out_sink_In_WDATA,
        m_axi_pass_Out_sink_In_WSTRB,
        m_axi_pass_Out_sink_In_WLAST,
        m_axi_pass_Out_sink_In_WID,
        m_axi_pass_Out_sink_In_WUSER,
        m_axi_pass_Out_sink_In_ARVALID,
        m_axi_pass_Out_sink_In_ARREADY,
        m_axi_pass_Out_sink_In_ARADDR,
        m_axi_pass_Out_sink_In_ARID,
        m_axi_pass_Out_sink_In_ARLEN,
        m_axi_pass_Out_sink_In_ARSIZE,
        m_axi_pass_Out_sink_In_ARBURST,
        m_axi_pass_Out_sink_In_ARLOCK,
        m_axi_pass_Out_sink_In_ARCACHE,
        m_axi_pass_Out_sink_In_ARPROT,
        m_axi_pass_Out_sink_In_ARQOS,
        m_axi_pass_Out_sink_In_ARREGION,
        m_axi_pass_Out_sink_In_ARUSER,
        m_axi_pass_Out_sink_In_RVALID,
        m_axi_pass_Out_sink_In_RREADY,
        m_axi_pass_Out_sink_In_RDATA,
        m_axi_pass_Out_sink_In_RLAST,
        m_axi_pass_Out_sink_In_RID,
        m_axi_pass_Out_sink_In_RUSER,
        m_axi_pass_Out_sink_In_RRESP,
        m_axi_pass_Out_sink_In_BVALID,
        m_axi_pass_Out_sink_In_BREADY,
        m_axi_pass_Out_sink_In_BRESP,
        m_axi_pass_Out_sink_In_BID,
        m_axi_pass_Out_sink_In_BUSER,
        pass_Out_sink_In_available_size,
        pass_Out_sink_In_size_V,
        pass_Out_sink_In_buffer_V,
        fifo_count,
        pass_Out_sink_In_V_dout,
        pass_Out_sink_In_V_empty_n,
        pass_Out_sink_In_V_read,
        pass_Out_sink_In_offset_V_dout,
        pass_Out_sink_In_offset_V_empty_n,
        pass_Out_sink_In_offset_V_read,
        ap_return
);

parameter    ap_ST_fsm_state1 = 32'd1;
parameter    ap_ST_fsm_state2 = 32'd2;
parameter    ap_ST_fsm_state3 = 32'd4;
parameter    ap_ST_fsm_pp0_stage0 = 32'd8;
parameter    ap_ST_fsm_state8 = 32'd16;
parameter    ap_ST_fsm_state9 = 32'd32;
parameter    ap_ST_fsm_state10 = 32'd64;
parameter    ap_ST_fsm_state11 = 32'd128;
parameter    ap_ST_fsm_state12 = 32'd256;
parameter    ap_ST_fsm_pp1_stage0 = 32'd512;
parameter    ap_ST_fsm_state16 = 32'd1024;
parameter    ap_ST_fsm_state17 = 32'd2048;
parameter    ap_ST_fsm_pp2_stage0 = 32'd4096;
parameter    ap_ST_fsm_state21 = 32'd8192;
parameter    ap_ST_fsm_state22 = 32'd16384;
parameter    ap_ST_fsm_state23 = 32'd32768;
parameter    ap_ST_fsm_state24 = 32'd65536;
parameter    ap_ST_fsm_state25 = 32'd131072;
parameter    ap_ST_fsm_state26 = 32'd262144;
parameter    ap_ST_fsm_state27 = 32'd524288;
parameter    ap_ST_fsm_state28 = 32'd1048576;
parameter    ap_ST_fsm_state29 = 32'd2097152;
parameter    ap_ST_fsm_state30 = 32'd4194304;
parameter    ap_ST_fsm_state31 = 32'd8388608;
parameter    ap_ST_fsm_state32 = 32'd16777216;
parameter    ap_ST_fsm_state33 = 32'd33554432;
parameter    ap_ST_fsm_state34 = 32'd67108864;
parameter    ap_ST_fsm_state35 = 32'd134217728;
parameter    ap_ST_fsm_state36 = 32'd268435456;
parameter    ap_ST_fsm_state37 = 32'd536870912;
parameter    ap_ST_fsm_state38 = 32'd1073741824;
parameter    ap_ST_fsm_state39 = 32'd2147483648;
parameter    C_M_AXI_PASS_OUT_SINK_IN_ID_WIDTH = 1;
parameter    C_M_AXI_PASS_OUT_SINK_IN_ADDR_WIDTH = 64;
parameter    C_M_AXI_PASS_OUT_SINK_IN_DATA_WIDTH = 512;
parameter    C_M_AXI_PASS_OUT_SINK_IN_AWUSER_WIDTH = 1;
parameter    C_M_AXI_PASS_OUT_SINK_IN_ARUSER_WIDTH = 1;
parameter    C_M_AXI_PASS_OUT_SINK_IN_WUSER_WIDTH = 1;
parameter    C_M_AXI_PASS_OUT_SINK_IN_RUSER_WIDTH = 1;
parameter    C_M_AXI_PASS_OUT_SINK_IN_BUSER_WIDTH = 1;
parameter    C_M_AXI_PASS_OUT_SINK_IN_USER_VALUE = 0;
parameter    C_M_AXI_PASS_OUT_SINK_IN_PROT_VALUE = 0;
parameter    C_M_AXI_PASS_OUT_SINK_IN_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_M_AXI_PASS_OUT_SINK_IN_WSTRB_WIDTH = (512 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_pass_Out_sink_In_AWVALID;
input   m_axi_pass_Out_sink_In_AWREADY;
output  [C_M_AXI_PASS_OUT_SINK_IN_ADDR_WIDTH - 1:0] m_axi_pass_Out_sink_In_AWADDR;
output  [C_M_AXI_PASS_OUT_SINK_IN_ID_WIDTH - 1:0] m_axi_pass_Out_sink_In_AWID;
output  [7:0] m_axi_pass_Out_sink_In_AWLEN;
output  [2:0] m_axi_pass_Out_sink_In_AWSIZE;
output  [1:0] m_axi_pass_Out_sink_In_AWBURST;
output  [1:0] m_axi_pass_Out_sink_In_AWLOCK;
output  [3:0] m_axi_pass_Out_sink_In_AWCACHE;
output  [2:0] m_axi_pass_Out_sink_In_AWPROT;
output  [3:0] m_axi_pass_Out_sink_In_AWQOS;
output  [3:0] m_axi_pass_Out_sink_In_AWREGION;
output  [C_M_AXI_PASS_OUT_SINK_IN_AWUSER_WIDTH - 1:0] m_axi_pass_Out_sink_In_AWUSER;
output   m_axi_pass_Out_sink_In_WVALID;
input   m_axi_pass_Out_sink_In_WREADY;
output  [C_M_AXI_PASS_OUT_SINK_IN_DATA_WIDTH - 1:0] m_axi_pass_Out_sink_In_WDATA;
output  [C_M_AXI_PASS_OUT_SINK_IN_WSTRB_WIDTH - 1:0] m_axi_pass_Out_sink_In_WSTRB;
output   m_axi_pass_Out_sink_In_WLAST;
output  [C_M_AXI_PASS_OUT_SINK_IN_ID_WIDTH - 1:0] m_axi_pass_Out_sink_In_WID;
output  [C_M_AXI_PASS_OUT_SINK_IN_WUSER_WIDTH - 1:0] m_axi_pass_Out_sink_In_WUSER;
output   m_axi_pass_Out_sink_In_ARVALID;
input   m_axi_pass_Out_sink_In_ARREADY;
output  [C_M_AXI_PASS_OUT_SINK_IN_ADDR_WIDTH - 1:0] m_axi_pass_Out_sink_In_ARADDR;
output  [C_M_AXI_PASS_OUT_SINK_IN_ID_WIDTH - 1:0] m_axi_pass_Out_sink_In_ARID;
output  [7:0] m_axi_pass_Out_sink_In_ARLEN;
output  [2:0] m_axi_pass_Out_sink_In_ARSIZE;
output  [1:0] m_axi_pass_Out_sink_In_ARBURST;
output  [1:0] m_axi_pass_Out_sink_In_ARLOCK;
output  [3:0] m_axi_pass_Out_sink_In_ARCACHE;
output  [2:0] m_axi_pass_Out_sink_In_ARPROT;
output  [3:0] m_axi_pass_Out_sink_In_ARQOS;
output  [3:0] m_axi_pass_Out_sink_In_ARREGION;
output  [C_M_AXI_PASS_OUT_SINK_IN_ARUSER_WIDTH - 1:0] m_axi_pass_Out_sink_In_ARUSER;
input   m_axi_pass_Out_sink_In_RVALID;
output   m_axi_pass_Out_sink_In_RREADY;
input  [C_M_AXI_PASS_OUT_SINK_IN_DATA_WIDTH - 1:0] m_axi_pass_Out_sink_In_RDATA;
input   m_axi_pass_Out_sink_In_RLAST;
input  [C_M_AXI_PASS_OUT_SINK_IN_ID_WIDTH - 1:0] m_axi_pass_Out_sink_In_RID;
input  [C_M_AXI_PASS_OUT_SINK_IN_RUSER_WIDTH - 1:0] m_axi_pass_Out_sink_In_RUSER;
input  [1:0] m_axi_pass_Out_sink_In_RRESP;
input   m_axi_pass_Out_sink_In_BVALID;
output   m_axi_pass_Out_sink_In_BREADY;
input  [1:0] m_axi_pass_Out_sink_In_BRESP;
input  [C_M_AXI_PASS_OUT_SINK_IN_ID_WIDTH - 1:0] m_axi_pass_Out_sink_In_BID;
input  [C_M_AXI_PASS_OUT_SINK_IN_BUSER_WIDTH - 1:0] m_axi_pass_Out_sink_In_BUSER;
input  [31:0] pass_Out_sink_In_available_size;
input  [63:0] pass_Out_sink_In_size_V;
input  [63:0] pass_Out_sink_In_buffer_V;
input  [31:0] fifo_count;
input  [31:0] pass_Out_sink_In_V_dout;
input   pass_Out_sink_In_V_empty_n;
output   pass_Out_sink_In_V_read;
input  [63:0] pass_Out_sink_In_offset_V_dout;
input   pass_Out_sink_In_offset_V_empty_n;
output   pass_Out_sink_In_offset_V_read;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg pass_Out_sink_In_V_read;
reg pass_Out_sink_In_offset_V_read;
reg[31:0] ap_return;

 reg    ap_rst_n_inv;
(* fsm_encoding = "none" *) reg   [31:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [63:0] i_pass_Out_sink_In_output_stage_mem_tokens_written;
reg   [63:0] i_pass_Out_sink_In_output_stage_mem_full_bus_lines_written;
reg   [511:0] i_pass_Out_sink_In_output_stage_mem_partial_bus_line_bus_line_V;
reg   [3:0] i_pass_Out_sink_In_output_stage_mem_partial_bus_line_len;
reg   [63:0] i_pass_Out_sink_In_output_stage_mem_partial_writes;
reg   [5:0] i_pass_Out_sink_In_output_stage_mem_burst_buffer_V_address0;
reg    i_pass_Out_sink_In_output_stage_mem_burst_buffer_V_ce0;
reg    i_pass_Out_sink_In_output_stage_mem_burst_buffer_V_we0;
reg   [511:0] i_pass_Out_sink_In_output_stage_mem_burst_buffer_V_d0;
wire   [511:0] i_pass_Out_sink_In_output_stage_mem_burst_buffer_V_q0;
reg    pass_Out_sink_In_blk_n_AW;
wire    ap_CS_fsm_state2;
wire   [0:0] tmp_90_nbreadreq_fu_198_p3;
reg    pass_Out_sink_In_blk_n_W;
wire    ap_CS_fsm_state32;
reg    pass_Out_sink_In_blk_n_B;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state9;
wire   [0:0] tmp_27_fu_857_p2;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state17;
reg    ap_enable_reg_pp2_iter2;
wire    ap_block_pp2_stage0;
reg   [0:0] exitcond_i_reg_1548;
reg   [0:0] exitcond_i_reg_1548_pp2_iter1_reg;
wire    ap_CS_fsm_state25;
reg    pass_Out_sink_In_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond106_i_reg_1358;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] exitcond105_i_reg_1492;
reg    pass_Out_sink_In_offset_V_blk_n;
reg    pass_Out_sink_In_AWVALID;
wire    pass_Out_sink_In_AWREADY;
reg   [63:0] pass_Out_sink_In_AWADDR;
reg   [31:0] pass_Out_sink_In_AWLEN;
reg    pass_Out_sink_In_WVALID;
wire    pass_Out_sink_In_WREADY;
reg   [511:0] pass_Out_sink_In_WDATA;
wire    pass_Out_sink_In_ARREADY;
wire    pass_Out_sink_In_RVALID;
wire   [511:0] pass_Out_sink_In_RDATA;
wire    pass_Out_sink_In_RLAST;
wire   [0:0] pass_Out_sink_In_RID;
wire   [0:0] pass_Out_sink_In_RUSER;
wire   [1:0] pass_Out_sink_In_RRESP;
wire    pass_Out_sink_In_BVALID;
reg    pass_Out_sink_In_BREADY;
wire   [1:0] pass_Out_sink_In_BRESP;
wire   [0:0] pass_Out_sink_In_BID;
wire   [0:0] pass_Out_sink_In_BUSER;
reg   [3:0] tmp_13_reg_279;
reg   [15:0] i_0_i_reg_289;
reg   [511:0] p_Val2_1_reg_360;
reg   [4:0] j_0_i_reg_373;
reg   [31:0] j6_0_i_reg_384;
reg   [31:0] reg_420;
wire    ap_block_state4_pp0_stage0_iter0;
reg    ap_block_state5_pp0_stage0_iter1;
wire    ap_block_state6_pp0_stage0_iter2;
wire    ap_block_state7_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_11001;
wire    ap_block_state13_pp1_stage0_iter0;
reg    ap_block_state14_pp1_stage0_iter1;
wire    ap_block_state15_pp1_stage0_iter2;
reg    ap_block_pp1_stage0_11001;
reg   [63:0] i_pass_Out_sink_In_output_stage_mem_tokens_written_load_reg_1256;
wire   [31:0] buffer_space_fu_432_p2;
reg   [31:0] buffer_space_reg_1261;
wire   [0:0] tmp_1_fu_438_p2;
reg   [0:0] tmp_1_reg_1266;
wire   [63:0] tmp_4_fu_454_p1;
reg   [63:0] tmp_4_reg_1271;
reg    ap_block_state2;
reg    ap_sig_ioackin_pass_Out_sink_In_AWREADY;
reg    ap_block_state2_io;
reg   [63:0] pass_Out_sink_In_addr_reg_1276;
wire   [31:0] tokens_to_write_fu_479_p3;
reg   [31:0] tokens_to_write_reg_1283;
reg   [63:0] i_pass_Out_sink_In_output_stage_mem_full_bus_lines_written_load_reg_1297;
reg   [3:0] i_pass_Out_sink_In_output_stage_mem_partial_bus_line_len_load_reg_1303;
wire   [0:0] can_write_fu_484_p2;
reg   [27:0] tmp_19_reg_1311;
reg   [63:0] tmp_5_reg_1316;
wire   [3:0] last_partial_tokens_fu_568_p2;
reg   [3:0] last_partial_tokens_reg_1321;
wire    ap_CS_fsm_state3;
wire   [28:0] bus_lines_to_write_fu_576_p2;
reg   [28:0] bus_lines_to_write_reg_1328;
wire   [29:0] bus_lines_to_write_cast_fu_582_p1;
reg   [29:0] bus_lines_to_write_cast_reg_1334;
wire   [28:0] bus_lines_to_write_0_i_fu_592_p3;
reg   [28:0] bus_lines_to_write_0_i_reg_1339;
wire   [0:0] tmp_2_fu_600_p2;
reg   [0:0] tmp_2_reg_1344;
wire   [15:0] tokens_to_fill_bus_line_fu_627_p3;
reg   [15:0] tokens_to_fill_bus_line_reg_1348;
wire   [3:0] tmp_22_fu_635_p1;
reg   [3:0] tmp_22_reg_1353;
wire   [0:0] exitcond106_i_fu_639_p2;
reg   [0:0] exitcond106_i_reg_1358_pp0_iter1_reg;
reg   [0:0] exitcond106_i_reg_1358_pp0_iter2_reg;
wire   [15:0] i_fu_644_p2;
reg    ap_enable_reg_pp0_iter0;
reg   [3:0] i_pass_Out_sink_In_output_stage_mem_partial_bus_line_len_load_1_reg_1367;
reg   [3:0] i_pass_Out_sink_In_output_stage_mem_partial_bus_line_len_load_1_reg_1367_pp0_iter1_reg;
reg   [3:0] i_pass_Out_sink_In_output_stage_mem_partial_bus_line_len_load_1_reg_1367_pp0_iter2_reg;
wire   [10:0] tmp_37_fu_650_p1;
reg   [10:0] tmp_37_reg_1373;
wire   [10:0] tmp_24_fu_668_p2;
reg   [10:0] tmp_24_reg_1378;
wire   [4:0] tmp_40_fu_695_p1;
reg   [4:0] tmp_40_reg_1383;
wire   [0:0] tmp_47_fu_707_p2;
reg   [0:0] tmp_47_reg_1388;
reg   [0:0] tmp_47_reg_1388_pp0_iter2_reg;
wire   [9:0] tmp_51_fu_713_p1;
reg   [9:0] tmp_51_reg_1396;
wire   [511:0] tmp_60_fu_771_p2;
reg   [511:0] tmp_60_reg_1402;
wire   [511:0] p_demorgan_fu_789_p2;
reg   [511:0] p_demorgan_reg_1408;
wire   [0:0] tmp_25_fu_849_p2;
reg   [0:0] tmp_25_reg_1414;
wire    ap_CS_fsm_state8;
wire   [4:0] phitmp_cast_fu_854_p1;
reg   [4:0] phitmp_cast_reg_1420;
wire   [28:0] i_1_fu_866_p2;
reg   [28:0] i_1_reg_1428;
reg    ap_block_state9_io;
wire   [0:0] tmp_28_fu_872_p2;
reg   [0:0] tmp_28_reg_1433;
wire   [29:0] chunk_size_fu_877_p2;
reg   [29:0] chunk_size_reg_1440;
wire   [63:0] val_assign_1_fu_885_p2;
reg   [63:0] val_assign_1_reg_1445;
wire   [31:0] burst_buffer_index_1_i_cast_fu_910_p1;
wire    ap_CS_fsm_state10;
wire  signed [31:0] full_chunk_size_cast_fu_920_p1;
reg  signed [31:0] full_chunk_size_cast_reg_1455;
wire   [0:0] has_partial_last_line_fu_929_p2;
reg   [0:0] has_partial_last_line_reg_1462;
wire  signed [31:0] tmp_29_cast_fu_940_p1;
reg  signed [31:0] tmp_29_cast_reg_1467;
wire   [3:0] storemerge1_i_fu_944_p3;
reg   [3:0] storemerge1_i_reg_1472;
wire   [0:0] last_line_fu_956_p2;
reg   [0:0] last_line_reg_1480;
wire    ap_CS_fsm_state11;
wire   [0:0] tmp_33_fu_951_p2;
wire   [63:0] pass_Out_sink_In_buffer_V4_sum_fu_1002_p2;
reg   [63:0] pass_Out_sink_In_buffer_V4_sum_reg_1487;
wire   [0:0] exitcond105_i_fu_1007_p2;
reg   [0:0] exitcond105_i_reg_1492_pp1_iter1_reg;
wire   [4:0] j_1_fu_1013_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [3:0] tmp_69_fu_1019_p1;
reg   [3:0] tmp_69_reg_1501;
wire   [9:0] high_range_1_fu_1049_p2;
reg   [9:0] high_range_1_reg_1506;
reg   [9:0] high_range_1_reg_1506_pp1_iter1_reg;
wire   [0:0] tmp_71_fu_1069_p2;
reg   [0:0] tmp_71_reg_1513;
wire   [9:0] tmp_72_fu_1075_p1;
reg   [9:0] tmp_72_reg_1520;
wire   [9:0] tmp_77_fu_1086_p2;
reg   [9:0] tmp_77_reg_1527;
wire   [511:0] p_Result_2_fu_1182_p2;
reg    ap_enable_reg_pp1_iter2;
wire   [31:0] burst_buffer_index_fu_1211_p2;
wire    ap_CS_fsm_state16;
wire   [0:0] exitcond_i_fu_1223_p2;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state18_pp2_stage0_iter0;
wire    ap_block_state19_pp2_stage0_iter1;
wire    ap_block_state20_pp2_stage0_iter2;
reg    ap_sig_ioackin_pass_Out_sink_In_WREADY;
reg    ap_block_state20_io;
reg    ap_block_pp2_stage0_11001;
wire   [31:0] j_fu_1228_p2;
reg    ap_enable_reg_pp2_iter0;
reg   [511:0] i_pass_Out_sink_In_output_stage_mem_burst_buffer_V_load_reg_1562;
reg    ap_enable_reg_pp2_iter1;
wire   [31:0] return_code_1_i_cast_fu_1247_p1;
wire    ap_CS_fsm_state38;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state4;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
wire    ap_CS_fsm_state12;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state13;
reg    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state18;
reg   [0:0] ap_phi_mux_burst_buffer_index_1_ph_i_phi_fu_304_p4;
reg   [0:0] burst_buffer_index_1_ph_i_reg_300;
reg   [0:0] burst_buffer_index_1_i_reg_313;
reg   [28:0] i1_0_i_reg_326;
reg   [31:0] burst_buffer_index_2_i_reg_338;
reg   [4:0] j_end_reg_348;
wire   [0:0] brmerge_i_fu_972_p2;
reg   [1:0] return_code_1_i_reg_395;
wire   [63:0] tmp_41_fu_1206_p1;
wire   [63:0] tmp_36_fu_1234_p1;
wire   [63:0] tmp_6_fu_468_p1;
reg    ap_reg_ioackin_pass_Out_sink_In_AWREADY;
reg    ap_reg_ioackin_pass_Out_sink_In_WREADY;
wire    ap_block_pp2_stage0_01001;
wire   [511:0] p_028_0_i_fu_1239_p1;
wire   [511:0] p_013_0_i_fu_1243_p1;
wire   [63:0] tmp_14_fu_552_p1;
wire   [63:0] tmp_32_fu_899_p2;
wire   [511:0] p_Result_s_fu_826_p2;
wire   [511:0] p_Val2_2_fu_1188_p3;
wire   [3:0] tmp_12_fu_526_p1;
wire   [3:0] tmp_16_fu_838_p2;
wire   [63:0] tmp_35_fu_981_p2;
wire   [31:0] tmp_fu_428_p1;
wire   [57:0] pass_Out_sink_In_buffer_V3_fu_444_p4;
wire   [57:0] pass_Out_sink_In_size_V1_fu_458_p4;
wire   [31:0] tmp_8_fu_494_p1;
wire   [31:0] extended_tokens_to_write_fu_498_p2;
wire   [31:0] tmp_9_fu_504_p2;
wire   [59:0] tmp_7_fu_542_p4;
wire   [3:0] tmp_15_fu_565_p1;
wire   [28:0] full_bus_lines_to_write_cast_fu_573_p1;
wire   [0:0] tmp_s_fu_586_p2;
wire   [4:0] tmp_8_cast_fu_562_p1;
wire   [4:0] tmp_10_fu_605_p2;
wire   [31:0] tmp_10_cast_fu_611_p1;
wire   [0:0] tmp_11_fu_615_p2;
wire   [15:0] tmp_20_fu_620_p1;
wire   [15:0] tmp_17_fu_623_p1;
wire   [4:0] tmp_24_cast_fu_654_p1;
wire   [4:0] tmp1_fu_658_p2;
wire   [10:0] tmp1_cast_fu_664_p1;
wire   [15:0] tmp_23_fu_677_p3;
wire   [10:0] tmp_21_fu_674_p1;
wire   [10:0] tmp_26_fu_690_p2;
wire   [15:0] low_range_fu_699_p3;
wire   [15:0] high_range_fu_684_p2;
wire   [9:0] tmp_50_fu_721_p3;
wire   [9:0] tmp_52_fu_728_p2;
wire   [9:0] tmp_53_fu_734_p3;
wire   [9:0] tmp_55_fu_746_p3;
wire   [9:0] tmp_54_fu_740_p3;
wire   [9:0] tmp_56_fu_753_p2;
wire   [511:0] loc_V_fu_717_p1;
wire   [511:0] tmp_57_fu_759_p1;
wire   [511:0] tmp_58_fu_763_p1;
wire   [511:0] tmp_59_fu_767_p1;
wire   [511:0] tmp_63_fu_777_p2;
wire   [511:0] tmp_64_fu_783_p2;
reg   [511:0] tmp_61_fu_795_p4;
wire   [511:0] tmp_65_fu_810_p2;
wire   [511:0] tmp_62_fu_804_p3;
wire   [511:0] tmp_66_fu_815_p2;
wire   [511:0] tmp_67_fu_821_p2;
wire   [29:0] i1_0_i_cast_fu_862_p1;
wire   [63:0] tmp_30_fu_882_p1;
wire   [63:0] tmp_31_fu_896_p1;
wire  signed [29:0] full_chunk_size_fu_914_p3;
wire   [0:0] not_i_fu_924_p2;
wire   [29:0] tmp_29_fu_934_p2;
wire   [0:0] tmp2_demorgan_fu_961_p2;
wire   [0:0] tmp2_fu_966_p2;
wire   [63:0] tmp_42_fu_993_p1;
wire   [63:0] tmp_43_fu_997_p2;
wire   [5:0] tmp_46_fu_1023_p3;
wire   [6:0] tmp_51_cast4_fu_1031_p1;
wire   [6:0] tmp_48_fu_1035_p2;
wire   [9:0] tmp_39_fu_1041_p3;
wire   [8:0] low_range_1_fu_1055_p3;
wire   [31:0] Lo_assign_1_fu_1065_p1;
wire   [31:0] Hi_assign_1_fu_1062_p1;
wire   [9:0] tmp_74_fu_1079_p3;
wire   [9:0] tmp_73_fu_1096_p2;
wire   [9:0] tmp_76_fu_1106_p3;
wire   [9:0] tmp_75_fu_1101_p3;
wire   [511:0] loc_V_1_fu_1092_p1;
wire   [511:0] tmp_78_fu_1112_p1;
wire   [511:0] tmp_81_fu_1123_p2;
reg   [511:0] tmp_82_fu_1129_p4;
wire   [511:0] tmp_79_fu_1116_p1;
wire   [511:0] tmp_80_fu_1120_p1;
wire   [511:0] tmp_84_fu_1146_p2;
wire   [511:0] tmp_85_fu_1152_p2;
wire   [511:0] p_demorgan1_fu_1158_p2;
wire   [511:0] tmp_86_fu_1164_p2;
wire   [511:0] tmp_83_fu_1139_p3;
wire   [511:0] tmp_87_fu_1170_p2;
wire   [511:0] tmp_88_fu_1176_p2;
wire    ap_CS_fsm_state39;
reg   [31:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_condition_686;
reg    ap_condition_710;

// power-on initialization
initial begin
#0 ap_CS_fsm = 32'd1;
#0 i_pass_Out_sink_In_output_stage_mem_tokens_written = 64'd0;
#0 i_pass_Out_sink_In_output_stage_mem_full_bus_lines_written = 64'd0;
#0 i_pass_Out_sink_In_output_stage_mem_partial_bus_line_bus_line_V = 512'd0;
#0 i_pass_Out_sink_In_output_stage_mem_partial_bus_line_len = 4'd0;
#0 i_pass_Out_sink_In_output_stage_mem_partial_writes = 64'd0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_reg_ioackin_pass_Out_sink_In_AWREADY = 1'b0;
#0 ap_reg_ioackin_pass_Out_sink_In_WREADY = 1'b0;
end

pass_Out_sink_In_output_stage_mem_i_pass_Out_sink_In_output_stage_mem_burst_buffer_V #(
    .DataWidth( 512 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
i_pass_Out_sink_In_output_stage_mem_burst_buffer_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(i_pass_Out_sink_In_output_stage_mem_burst_buffer_V_address0),
    .ce0(i_pass_Out_sink_In_output_stage_mem_burst_buffer_V_ce0),
    .we0(i_pass_Out_sink_In_output_stage_mem_burst_buffer_V_we0),
    .d0(i_pass_Out_sink_In_output_stage_mem_burst_buffer_V_d0),
    .q0(i_pass_Out_sink_In_output_stage_mem_burst_buffer_V_q0)
);

pass_Out_sink_In_output_stage_mem_pass_Out_sink_In_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 512 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_PASS_OUT_SINK_IN_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_PASS_OUT_SINK_IN_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_PASS_OUT_SINK_IN_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_PASS_OUT_SINK_IN_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_PASS_OUT_SINK_IN_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_PASS_OUT_SINK_IN_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_PASS_OUT_SINK_IN_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_PASS_OUT_SINK_IN_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_PASS_OUT_SINK_IN_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_PASS_OUT_SINK_IN_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_PASS_OUT_SINK_IN_CACHE_VALUE ))
pass_Out_sink_In_output_stage_mem_pass_Out_sink_In_m_axi_U(
    .AWVALID(m_axi_pass_Out_sink_In_AWVALID),
    .AWREADY(m_axi_pass_Out_sink_In_AWREADY),
    .AWADDR(m_axi_pass_Out_sink_In_AWADDR),
    .AWID(m_axi_pass_Out_sink_In_AWID),
    .AWLEN(m_axi_pass_Out_sink_In_AWLEN),
    .AWSIZE(m_axi_pass_Out_sink_In_AWSIZE),
    .AWBURST(m_axi_pass_Out_sink_In_AWBURST),
    .AWLOCK(m_axi_pass_Out_sink_In_AWLOCK),
    .AWCACHE(m_axi_pass_Out_sink_In_AWCACHE),
    .AWPROT(m_axi_pass_Out_sink_In_AWPROT),
    .AWQOS(m_axi_pass_Out_sink_In_AWQOS),
    .AWREGION(m_axi_pass_Out_sink_In_AWREGION),
    .AWUSER(m_axi_pass_Out_sink_In_AWUSER),
    .WVALID(m_axi_pass_Out_sink_In_WVALID),
    .WREADY(m_axi_pass_Out_sink_In_WREADY),
    .WDATA(m_axi_pass_Out_sink_In_WDATA),
    .WSTRB(m_axi_pass_Out_sink_In_WSTRB),
    .WLAST(m_axi_pass_Out_sink_In_WLAST),
    .WID(m_axi_pass_Out_sink_In_WID),
    .WUSER(m_axi_pass_Out_sink_In_WUSER),
    .ARVALID(m_axi_pass_Out_sink_In_ARVALID),
    .ARREADY(m_axi_pass_Out_sink_In_ARREADY),
    .ARADDR(m_axi_pass_Out_sink_In_ARADDR),
    .ARID(m_axi_pass_Out_sink_In_ARID),
    .ARLEN(m_axi_pass_Out_sink_In_ARLEN),
    .ARSIZE(m_axi_pass_Out_sink_In_ARSIZE),
    .ARBURST(m_axi_pass_Out_sink_In_ARBURST),
    .ARLOCK(m_axi_pass_Out_sink_In_ARLOCK),
    .ARCACHE(m_axi_pass_Out_sink_In_ARCACHE),
    .ARPROT(m_axi_pass_Out_sink_In_ARPROT),
    .ARQOS(m_axi_pass_Out_sink_In_ARQOS),
    .ARREGION(m_axi_pass_Out_sink_In_ARREGION),
    .ARUSER(m_axi_pass_Out_sink_In_ARUSER),
    .RVALID(m_axi_pass_Out_sink_In_RVALID),
    .RREADY(m_axi_pass_Out_sink_In_RREADY),
    .RDATA(m_axi_pass_Out_sink_In_RDATA),
    .RLAST(m_axi_pass_Out_sink_In_RLAST),
    .RID(m_axi_pass_Out_sink_In_RID),
    .RUSER(m_axi_pass_Out_sink_In_RUSER),
    .RRESP(m_axi_pass_Out_sink_In_RRESP),
    .BVALID(m_axi_pass_Out_sink_In_BVALID),
    .BREADY(m_axi_pass_Out_sink_In_BREADY),
    .BRESP(m_axi_pass_Out_sink_In_BRESP),
    .BID(m_axi_pass_Out_sink_In_BID),
    .BUSER(m_axi_pass_Out_sink_In_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(pass_Out_sink_In_ARREADY),
    .I_ARADDR(64'd0),
    .I_ARID(1'd0),
    .I_ARLEN(32'd0),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(pass_Out_sink_In_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(pass_Out_sink_In_RDATA),
    .I_RID(pass_Out_sink_In_RID),
    .I_RUSER(pass_Out_sink_In_RUSER),
    .I_RRESP(pass_Out_sink_In_RRESP),
    .I_RLAST(pass_Out_sink_In_RLAST),
    .I_AWVALID(pass_Out_sink_In_AWVALID),
    .I_AWREADY(pass_Out_sink_In_AWREADY),
    .I_AWADDR(pass_Out_sink_In_AWADDR),
    .I_AWID(1'd0),
    .I_AWLEN(pass_Out_sink_In_AWLEN),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(pass_Out_sink_In_WVALID),
    .I_WREADY(pass_Out_sink_In_WREADY),
    .I_WDATA(pass_Out_sink_In_WDATA),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(64'd18446744073709551615),
    .I_BVALID(pass_Out_sink_In_BVALID),
    .I_BREADY(pass_Out_sink_In_BREADY),
    .I_BRESP(pass_Out_sink_In_BRESP),
    .I_BID(pass_Out_sink_In_BID),
    .I_BUSER(pass_Out_sink_In_BUSER)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state4) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state3) & (tmp_2_fu_600_p2 == 1'd0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state4)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state4);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end else if (((1'b1 == ap_CS_fsm_state3) & (tmp_2_fu_600_p2 == 1'd0))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state13) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state12)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state13)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state13);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end else if ((1'b1 == ap_CS_fsm_state12)) begin
            ap_enable_reg_pp1_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state18) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((ap_sig_ioackin_pass_Out_sink_In_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state18)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state18);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end else if (((ap_sig_ioackin_pass_Out_sink_In_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
            ap_enable_reg_pp2_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_pass_Out_sink_In_AWREADY <= 1'b0;
    end else begin
        if ((((ap_sig_ioackin_pass_Out_sink_In_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state17)) | ((1'b0 == ap_block_state9_io) & (1'b1 == ap_CS_fsm_state9) & (tmp_27_fu_857_p2 == 1'd0)) | (~((1'b1 == ap_block_state2_io) | ((pass_Out_sink_In_offset_V_empty_n == 1'b0) & (tmp_90_nbreadreq_fu_198_p3 == 1'd1))) & (1'b1 == ap_CS_fsm_state2) & (tmp_90_nbreadreq_fu_198_p3 == 1'd1)))) begin
            ap_reg_ioackin_pass_Out_sink_In_AWREADY <= 1'b0;
        end else if ((((pass_Out_sink_In_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state17)) | ((pass_Out_sink_In_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state9) & (tmp_27_fu_857_p2 == 1'd0)) | (~((pass_Out_sink_In_offset_V_empty_n == 1'b0) & (tmp_90_nbreadreq_fu_198_p3 == 1'd1)) & (pass_Out_sink_In_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (tmp_90_nbreadreq_fu_198_p3 == 1'd1)))) begin
            ap_reg_ioackin_pass_Out_sink_In_AWREADY <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_pass_Out_sink_In_WREADY <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1) & (exitcond_i_reg_1548_pp2_iter1_reg == 1'd0)) | ((ap_sig_ioackin_pass_Out_sink_In_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state26)) | ((ap_sig_ioackin_pass_Out_sink_In_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state32)))) begin
            ap_reg_ioackin_pass_Out_sink_In_WREADY <= 1'b0;
        end else if ((((1'b0 == ap_block_pp2_stage0_01001) & (pass_Out_sink_In_WREADY == 1'b1) & (ap_enable_reg_pp2_iter2 == 1'b1) & (exitcond_i_reg_1548_pp2_iter1_reg == 1'd0)) | ((pass_Out_sink_In_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state26)) | ((pass_Out_sink_In_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state32)))) begin
            ap_reg_ioackin_pass_Out_sink_In_WREADY <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        burst_buffer_index_1_i_reg_313 <= ap_phi_mux_burst_buffer_index_1_ph_i_phi_fu_304_p4;
    end else if (((pass_Out_sink_In_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state25))) begin
        burst_buffer_index_1_i_reg_313 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (tmp_2_fu_600_p2 == 1'd1))) begin
        burst_buffer_index_1_ph_i_reg_300 <= 1'd0;
    end else if (((1'b1 == ap_CS_fsm_state8) & (tmp_2_reg_1344 == 1'd0))) begin
        burst_buffer_index_1_ph_i_reg_300 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        burst_buffer_index_2_i_reg_338 <= burst_buffer_index_fu_1211_p2;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        burst_buffer_index_2_i_reg_338 <= burst_buffer_index_1_i_cast_fu_910_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        i1_0_i_reg_326 <= 29'd0;
    end else if (((pass_Out_sink_In_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state25))) begin
        i1_0_i_reg_326 <= i_1_reg_1428;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond106_i_fu_639_p2 == 1'd0))) begin
        i_0_i_reg_289 <= i_fu_644_p2;
    end else if (((1'b1 == ap_CS_fsm_state3) & (tmp_2_fu_600_p2 == 1'd0))) begin
        i_0_i_reg_289 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state9_io) & (1'b1 == ap_CS_fsm_state9) & (tmp_27_fu_857_p2 == 1'd0))) begin
        i_pass_Out_sink_In_output_stage_mem_full_bus_lines_written <= tmp_32_fu_899_p2;
    end else if ((~((1'b1 == ap_block_state2_io) | ((pass_Out_sink_In_offset_V_empty_n == 1'b0) & (tmp_90_nbreadreq_fu_198_p3 == 1'd1))) & (1'b1 == ap_CS_fsm_state2) & (tmp_90_nbreadreq_fu_198_p3 == 1'd1))) begin
        i_pass_Out_sink_In_output_stage_mem_full_bus_lines_written <= tmp_14_fu_552_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & (last_line_reg_1480 == 1'd1))) begin
        i_pass_Out_sink_In_output_stage_mem_partial_bus_line_bus_line_V <= p_Val2_2_fu_1188_p3;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (exitcond106_i_reg_1358_pp0_iter2_reg == 1'd0))) begin
        i_pass_Out_sink_In_output_stage_mem_partial_bus_line_bus_line_V <= p_Result_s_fu_826_p2;
    end else if ((~((1'b1 == ap_block_state2_io) | ((pass_Out_sink_In_offset_V_empty_n == 1'b0) & (tmp_90_nbreadreq_fu_198_p3 == 1'd1))) & (1'b1 == ap_CS_fsm_state2) & (tmp_90_nbreadreq_fu_198_p3 == 1'd1))) begin
        i_pass_Out_sink_In_output_stage_mem_partial_bus_line_bus_line_V <= 512'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & (last_line_reg_1480 == 1'd1))) begin
        i_pass_Out_sink_In_output_stage_mem_partial_bus_line_len <= storemerge1_i_reg_1472;
    end else if (((1'b1 == ap_CS_fsm_state8) & (tmp_2_reg_1344 == 1'd0))) begin
        i_pass_Out_sink_In_output_stage_mem_partial_bus_line_len <= tmp_16_fu_838_p2;
    end else if ((~((1'b1 == ap_block_state2_io) | ((pass_Out_sink_In_offset_V_empty_n == 1'b0) & (tmp_90_nbreadreq_fu_198_p3 == 1'd1))) & (1'b1 == ap_CS_fsm_state2) & (tmp_90_nbreadreq_fu_198_p3 == 1'd1))) begin
        i_pass_Out_sink_In_output_stage_mem_partial_bus_line_len <= tmp_12_fu_526_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state9_io) & (1'b1 == ap_CS_fsm_state9) & (tmp_27_fu_857_p2 == 1'd0))) begin
        i_pass_Out_sink_In_output_stage_mem_tokens_written <= val_assign_1_fu_885_p2;
    end else if ((~((1'b1 == ap_block_state2_io) | ((pass_Out_sink_In_offset_V_empty_n == 1'b0) & (tmp_90_nbreadreq_fu_198_p3 == 1'd1))) & (1'b1 == ap_CS_fsm_state2) & (tmp_90_nbreadreq_fu_198_p3 == 1'd1))) begin
        i_pass_Out_sink_In_output_stage_mem_tokens_written <= pass_Out_sink_In_offset_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond_i_fu_1223_p2 == 1'd0))) begin
        j6_0_i_reg_384 <= j_fu_1228_p2;
    end else if (((ap_sig_ioackin_pass_Out_sink_In_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
        j6_0_i_reg_384 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond105_i_fu_1007_p2 == 1'd0))) begin
        j_0_i_reg_373 <= j_1_fu_1013_p2;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        j_0_i_reg_373 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (tmp_33_fu_951_p2 == 1'd1))) begin
        if ((brmerge_i_fu_972_p2 == 1'd1)) begin
            j_end_reg_348 <= 5'd16;
        end else if ((brmerge_i_fu_972_p2 == 1'd0)) begin
            j_end_reg_348 <= phitmp_cast_reg_1420;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (exitcond105_i_reg_1492_pp1_iter1_reg == 1'd0))) begin
        p_Val2_1_reg_360 <= p_Result_2_fu_1182_p2;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        p_Val2_1_reg_360 <= 512'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state2_io) | ((pass_Out_sink_In_offset_V_empty_n == 1'b0) & (tmp_90_nbreadreq_fu_198_p3 == 1'd1))) & (1'b1 == ap_CS_fsm_state2) & (can_write_fu_484_p2 == 1'd1) & (tmp_90_nbreadreq_fu_198_p3 == 1'd0))) begin
                return_code_1_i_reg_395[1] <= 1'b0;
    end else if ((((pass_Out_sink_In_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state31)) | ((pass_Out_sink_In_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state37)))) begin
                return_code_1_i_reg_395[1] <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (exitcond106_i_reg_1358_pp0_iter2_reg == 1'd0))) begin
        tmp_13_reg_279 <= i_pass_Out_sink_In_output_stage_mem_partial_bus_line_len_load_1_reg_1367_pp0_iter2_reg;
    end else if (((1'b1 == ap_CS_fsm_state3) & (tmp_2_fu_600_p2 == 1'd0))) begin
        tmp_13_reg_279 <= i_pass_Out_sink_In_output_stage_mem_partial_bus_line_len_load_reg_1303;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        ap_return[1] <= return_code_1_i_cast_fu_1247_p1[1];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        buffer_space_reg_1261 <= buffer_space_fu_432_p2;
        i_pass_Out_sink_In_output_stage_mem_tokens_written_load_reg_1256 <= i_pass_Out_sink_In_output_stage_mem_tokens_written;
        tmp_1_reg_1266 <= tmp_1_fu_438_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        bus_lines_to_write_0_i_reg_1339 <= bus_lines_to_write_0_i_fu_592_p3;
        bus_lines_to_write_cast_reg_1334[28 : 0] <= bus_lines_to_write_cast_fu_582_p1[28 : 0];
        bus_lines_to_write_reg_1328 <= bus_lines_to_write_fu_576_p2;
        last_partial_tokens_reg_1321 <= last_partial_tokens_fu_568_p2;
        tmp_2_reg_1344 <= tmp_2_fu_600_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state9_io) & (1'b1 == ap_CS_fsm_state9) & (tmp_27_fu_857_p2 == 1'd1))) begin
        chunk_size_reg_1440 <= chunk_size_fu_877_p2;
        i_1_reg_1428 <= i_1_fu_866_p2;
        tmp_28_reg_1433 <= tmp_28_fu_872_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        exitcond105_i_reg_1492 <= exitcond105_i_fu_1007_p2;
        exitcond105_i_reg_1492_pp1_iter1_reg <= exitcond105_i_reg_1492;
        high_range_1_reg_1506_pp1_iter1_reg[9 : 5] <= high_range_1_reg_1506[9 : 5];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exitcond106_i_reg_1358 <= exitcond106_i_fu_639_p2;
        exitcond106_i_reg_1358_pp0_iter1_reg <= exitcond106_i_reg_1358;
        i_pass_Out_sink_In_output_stage_mem_partial_bus_line_len_load_1_reg_1367_pp0_iter1_reg <= i_pass_Out_sink_In_output_stage_mem_partial_bus_line_len_load_1_reg_1367;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        exitcond106_i_reg_1358_pp0_iter2_reg <= exitcond106_i_reg_1358_pp0_iter1_reg;
        i_pass_Out_sink_In_output_stage_mem_partial_bus_line_len_load_1_reg_1367_pp0_iter2_reg <= i_pass_Out_sink_In_output_stage_mem_partial_bus_line_len_load_1_reg_1367_pp0_iter1_reg;
        tmp_47_reg_1388_pp0_iter2_reg <= tmp_47_reg_1388;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        exitcond_i_reg_1548 <= exitcond_i_fu_1223_p2;
        exitcond_i_reg_1548_pp2_iter1_reg <= exitcond_i_reg_1548;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        full_chunk_size_cast_reg_1455 <= full_chunk_size_cast_fu_920_p1;
        has_partial_last_line_reg_1462 <= has_partial_last_line_fu_929_p2;
        storemerge1_i_reg_1472 <= storemerge1_i_fu_944_p3;
        tmp_29_cast_reg_1467 <= tmp_29_cast_fu_940_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond105_i_fu_1007_p2 == 1'd0))) begin
        high_range_1_reg_1506[9 : 5] <= high_range_1_fu_1049_p2[9 : 5];
        tmp_69_reg_1501 <= tmp_69_fu_1019_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond_i_reg_1548 == 1'd0))) begin
        i_pass_Out_sink_In_output_stage_mem_burst_buffer_V_load_reg_1562 <= i_pass_Out_sink_In_output_stage_mem_burst_buffer_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state2_io) | ((pass_Out_sink_In_offset_V_empty_n == 1'b0) & (tmp_90_nbreadreq_fu_198_p3 == 1'd1))) & (1'b1 == ap_CS_fsm_state2))) begin
        i_pass_Out_sink_In_output_stage_mem_full_bus_lines_written_load_reg_1297 <= i_pass_Out_sink_In_output_stage_mem_full_bus_lines_written;
        pass_Out_sink_In_addr_reg_1276[57 : 0] <= tmp_6_fu_468_p1[57 : 0];
        tmp_4_reg_1271[57 : 0] <= tmp_4_fu_454_p1[57 : 0];
        tokens_to_write_reg_1283 <= tokens_to_write_fu_479_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond106_i_fu_639_p2 == 1'd0))) begin
        i_pass_Out_sink_In_output_stage_mem_partial_bus_line_len_load_1_reg_1367 <= i_pass_Out_sink_In_output_stage_mem_partial_bus_line_len;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state2_io) | ((pass_Out_sink_In_offset_V_empty_n == 1'b0) & (tmp_90_nbreadreq_fu_198_p3 == 1'd1))) & (1'b1 == ap_CS_fsm_state2) & (can_write_fu_484_p2 == 1'd0) & (tmp_90_nbreadreq_fu_198_p3 == 1'd0))) begin
        i_pass_Out_sink_In_output_stage_mem_partial_bus_line_len_load_reg_1303 <= i_pass_Out_sink_In_output_stage_mem_partial_bus_line_len;
        tmp_19_reg_1311 <= {{tmp_9_fu_504_p2[31:4]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (brmerge_i_fu_972_p2 == 1'd0) & (tmp_33_fu_951_p2 == 1'd1))) begin
        i_pass_Out_sink_In_output_stage_mem_partial_writes <= tmp_35_fu_981_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (tmp_33_fu_951_p2 == 1'd1))) begin
        last_line_reg_1480 <= last_line_fu_956_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond106_i_reg_1358_pp0_iter1_reg == 1'd0))) begin
        p_demorgan_reg_1408 <= p_demorgan_fu_789_p2;
        tmp_60_reg_1402 <= tmp_60_fu_771_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (tmp_33_fu_951_p2 == 1'd0))) begin
        pass_Out_sink_In_buffer_V4_sum_reg_1487 <= pass_Out_sink_In_buffer_V4_sum_fu_1002_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        phitmp_cast_reg_1420[3 : 0] <= phitmp_cast_fu_854_p1[3 : 0];
        tmp_25_reg_1414 <= tmp_25_fu_849_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond105_i_reg_1492 == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond106_i_reg_1358 == 1'd0)))) begin
        reg_420 <= pass_Out_sink_In_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (tmp_2_fu_600_p2 == 1'd0))) begin
        tmp_22_reg_1353 <= tmp_22_fu_635_p1;
        tokens_to_fill_bus_line_reg_1348 <= tokens_to_fill_bus_line_fu_627_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond106_i_fu_639_p2 == 1'd0))) begin
        tmp_24_reg_1378 <= tmp_24_fu_668_p2;
        tmp_37_reg_1373 <= tmp_37_fu_650_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond106_i_reg_1358 == 1'd0))) begin
        tmp_40_reg_1383 <= tmp_40_fu_695_p1;
        tmp_47_reg_1388 <= tmp_47_fu_707_p2;
        tmp_51_reg_1396[9 : 5] <= tmp_51_fu_713_p1[9 : 5];
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state2_io) | ((pass_Out_sink_In_offset_V_empty_n == 1'b0) & (tmp_90_nbreadreq_fu_198_p3 == 1'd1))) & (1'b1 == ap_CS_fsm_state2) & (tmp_90_nbreadreq_fu_198_p3 == 1'd1))) begin
        tmp_5_reg_1316 <= pass_Out_sink_In_offset_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond105_i_reg_1492 == 1'd0))) begin
        tmp_71_reg_1513 <= tmp_71_fu_1069_p2;
        tmp_72_reg_1520[8 : 5] <= tmp_72_fu_1075_p1[8 : 5];
        tmp_77_reg_1527 <= tmp_77_fu_1086_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state9_io) & (1'b1 == ap_CS_fsm_state9) & (tmp_27_fu_857_p2 == 1'd0))) begin
        val_assign_1_reg_1445 <= val_assign_1_fu_885_p2;
    end
end

always @ (*) begin
    if ((exitcond106_i_fu_639_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state4 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state4 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond105_i_fu_1007_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state13 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state13 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_i_fu_1223_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state18 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state18 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) & (tmp_2_reg_1344 == 1'd0))) begin
        ap_phi_mux_burst_buffer_index_1_ph_i_phi_fu_304_p4 = 1'd1;
    end else begin
        ap_phi_mux_burst_buffer_index_1_ph_i_phi_fu_304_p4 = burst_buffer_index_1_ph_i_reg_300;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_pass_Out_sink_In_AWREADY == 1'b0)) begin
        ap_sig_ioackin_pass_Out_sink_In_AWREADY = pass_Out_sink_In_AWREADY;
    end else begin
        ap_sig_ioackin_pass_Out_sink_In_AWREADY = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_pass_Out_sink_In_WREADY == 1'b0)) begin
        ap_sig_ioackin_pass_Out_sink_In_WREADY = pass_Out_sink_In_WREADY;
    end else begin
        ap_sig_ioackin_pass_Out_sink_In_WREADY = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        i_pass_Out_sink_In_output_stage_mem_burst_buffer_V_address0 = tmp_36_fu_1234_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        i_pass_Out_sink_In_output_stage_mem_burst_buffer_V_address0 = tmp_41_fu_1206_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        i_pass_Out_sink_In_output_stage_mem_burst_buffer_V_address0 = 6'd0;
    end else begin
        i_pass_Out_sink_In_output_stage_mem_burst_buffer_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state8) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
        i_pass_Out_sink_In_output_stage_mem_burst_buffer_V_ce0 = 1'b1;
    end else begin
        i_pass_Out_sink_In_output_stage_mem_burst_buffer_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        i_pass_Out_sink_In_output_stage_mem_burst_buffer_V_d0 = p_Val2_1_reg_360;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        i_pass_Out_sink_In_output_stage_mem_burst_buffer_V_d0 = i_pass_Out_sink_In_output_stage_mem_partial_bus_line_bus_line_V;
    end else begin
        i_pass_Out_sink_In_output_stage_mem_burst_buffer_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | ((1'b1 == ap_CS_fsm_state8) & (tmp_2_reg_1344 == 1'd0)))) begin
        i_pass_Out_sink_In_output_stage_mem_burst_buffer_V_we0 = 1'b1;
    end else begin
        i_pass_Out_sink_In_output_stage_mem_burst_buffer_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_pass_Out_sink_In_AWREADY == 1'b0)) begin
        if ((1'b1 == ap_CS_fsm_state17)) begin
            pass_Out_sink_In_AWADDR = pass_Out_sink_In_buffer_V4_sum_reg_1487;
        end else if (((1'b1 == ap_CS_fsm_state9) & (tmp_27_fu_857_p2 == 1'd0))) begin
            pass_Out_sink_In_AWADDR = pass_Out_sink_In_addr_reg_1276;
        end else if ((1'b1 == ap_condition_686)) begin
            pass_Out_sink_In_AWADDR = tmp_6_fu_468_p1;
        end else begin
            pass_Out_sink_In_AWADDR = 'bx;
        end
    end else begin
        pass_Out_sink_In_AWADDR = 'bx;
    end
end

always @ (*) begin
    if (((ap_reg_ioackin_pass_Out_sink_In_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state17))) begin
        pass_Out_sink_In_AWLEN = full_chunk_size_cast_reg_1455;
    end else if ((((ap_reg_ioackin_pass_Out_sink_In_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state9) & (tmp_27_fu_857_p2 == 1'd0)) | (~((pass_Out_sink_In_offset_V_empty_n == 1'b0) & (tmp_90_nbreadreq_fu_198_p3 == 1'd1)) & (ap_reg_ioackin_pass_Out_sink_In_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state2) & (tmp_90_nbreadreq_fu_198_p3 == 1'd1)))) begin
        pass_Out_sink_In_AWLEN = 32'd1;
    end else begin
        pass_Out_sink_In_AWLEN = 'bx;
    end
end

always @ (*) begin
    if ((((ap_reg_ioackin_pass_Out_sink_In_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state17)) | ((ap_reg_ioackin_pass_Out_sink_In_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state9) & (tmp_27_fu_857_p2 == 1'd0)) | (~((pass_Out_sink_In_offset_V_empty_n == 1'b0) & (tmp_90_nbreadreq_fu_198_p3 == 1'd1)) & (ap_reg_ioackin_pass_Out_sink_In_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state2) & (tmp_90_nbreadreq_fu_198_p3 == 1'd1)))) begin
        pass_Out_sink_In_AWVALID = 1'b1;
    end else begin
        pass_Out_sink_In_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((pass_Out_sink_In_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state25)) | ((pass_Out_sink_In_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state31)) | ((pass_Out_sink_In_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state37)))) begin
        pass_Out_sink_In_BREADY = 1'b1;
    end else begin
        pass_Out_sink_In_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond105_i_reg_1492 == 1'd0)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond106_i_reg_1358 == 1'd0)))) begin
        pass_Out_sink_In_V_blk_n = pass_Out_sink_In_V_empty_n;
    end else begin
        pass_Out_sink_In_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond105_i_reg_1492 == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond106_i_reg_1358 == 1'd0)))) begin
        pass_Out_sink_In_V_read = 1'b1;
    end else begin
        pass_Out_sink_In_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_pass_Out_sink_In_WREADY == 1'b0)) begin
        if ((1'b1 == ap_CS_fsm_state32)) begin
            pass_Out_sink_In_WDATA = p_013_0_i_fu_1243_p1;
        end else if ((1'b1 == ap_CS_fsm_state26)) begin
            pass_Out_sink_In_WDATA = p_028_0_i_fu_1239_p1;
        end else if ((1'b1 == ap_condition_710)) begin
            pass_Out_sink_In_WDATA = i_pass_Out_sink_In_output_stage_mem_burst_buffer_V_load_reg_1562;
        end else begin
            pass_Out_sink_In_WDATA = 'bx;
        end
    end else begin
        pass_Out_sink_In_WDATA = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_01001) & (ap_reg_ioackin_pass_Out_sink_In_WREADY == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b1) & (exitcond_i_reg_1548_pp2_iter1_reg == 1'd0)) | ((ap_reg_ioackin_pass_Out_sink_In_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state26)) | ((ap_reg_ioackin_pass_Out_sink_In_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state32)))) begin
        pass_Out_sink_In_WVALID = 1'b1;
    end else begin
        pass_Out_sink_In_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((1'b1 == ap_CS_fsm_state9) & (tmp_27_fu_857_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state2) & (tmp_90_nbreadreq_fu_198_p3 == 1'd1)))) begin
        pass_Out_sink_In_blk_n_AW = m_axi_pass_Out_sink_In_AWREADY;
    end else begin
        pass_Out_sink_In_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state37))) begin
        pass_Out_sink_In_blk_n_B = m_axi_pass_Out_sink_In_BVALID;
    end else begin
        pass_Out_sink_In_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state32) | ((ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage0) & (exitcond_i_reg_1548_pp2_iter1_reg == 1'd0)))) begin
        pass_Out_sink_In_blk_n_W = m_axi_pass_Out_sink_In_WREADY;
    end else begin
        pass_Out_sink_In_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_90_nbreadreq_fu_198_p3 == 1'd1))) begin
        pass_Out_sink_In_offset_V_blk_n = pass_Out_sink_In_offset_V_empty_n;
    end else begin
        pass_Out_sink_In_offset_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state2_io) | ((pass_Out_sink_In_offset_V_empty_n == 1'b0) & (tmp_90_nbreadreq_fu_198_p3 == 1'd1))) & (1'b1 == ap_CS_fsm_state2) & (tmp_90_nbreadreq_fu_198_p3 == 1'd1))) begin
        pass_Out_sink_In_offset_V_read = 1'b1;
    end else begin
        pass_Out_sink_In_offset_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~((1'b1 == ap_block_state2_io) | ((pass_Out_sink_In_offset_V_empty_n == 1'b0) & (tmp_90_nbreadreq_fu_198_p3 == 1'd1))) & (1'b1 == ap_CS_fsm_state2) & (can_write_fu_484_p2 == 1'd1) & (tmp_90_nbreadreq_fu_198_p3 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end else if ((~((1'b1 == ap_block_state2_io) | ((pass_Out_sink_In_offset_V_empty_n == 1'b0) & (tmp_90_nbreadreq_fu_198_p3 == 1'd1))) & (1'b1 == ap_CS_fsm_state2) & (can_write_fu_484_p2 == 1'd0) & (tmp_90_nbreadreq_fu_198_p3 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if ((~((1'b1 == ap_block_state2_io) | ((pass_Out_sink_In_offset_V_empty_n == 1'b0) & (tmp_90_nbreadreq_fu_198_p3 == 1'd1))) & (1'b1 == ap_CS_fsm_state2) & (tmp_90_nbreadreq_fu_198_p3 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (tmp_2_fu_600_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond106_i_fu_639_p2 == 1'd1)) & ~((ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond106_i_fu_639_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((1'b0 == ap_block_state9_io) & (1'b1 == ap_CS_fsm_state9) & (tmp_27_fu_857_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else if (((1'b0 == ap_block_state9_io) & (1'b1 == ap_CS_fsm_state9) & (tmp_27_fu_857_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (tmp_33_fu_951_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (exitcond105_i_fu_1007_p2 == 1'd1)) & ~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (exitcond105_i_fu_1007_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state17 : begin
            if (((ap_sig_ioackin_pass_Out_sink_In_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (exitcond_i_fu_1223_p2 == 1'd1)) & ~((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (exitcond_i_fu_1223_p2 == 1'd1)) | ((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            if (((pass_Out_sink_In_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state25))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state26 : begin
            if (((ap_sig_ioackin_pass_Out_sink_In_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state26))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            if (((pass_Out_sink_In_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state31))) begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end
        end
        ap_ST_fsm_state32 : begin
            if (((ap_sig_ioackin_pass_Out_sink_In_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state32))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            if (((pass_Out_sink_In_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state37))) begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Hi_assign_1_fu_1062_p1 = high_range_1_reg_1506;

assign Lo_assign_1_fu_1065_p1 = low_range_1_fu_1055_p3;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((pass_Out_sink_In_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond106_i_reg_1358 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((pass_Out_sink_In_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond106_i_reg_1358 == 1'd0));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((pass_Out_sink_In_V_empty_n == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (exitcond105_i_reg_1492 == 1'd0));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((pass_Out_sink_In_V_empty_n == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (exitcond105_i_reg_1492 == 1'd0));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage0_11001 = ((1'b1 == ap_block_state20_io) & (ap_enable_reg_pp2_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp2_stage0_subdone = ((1'b1 == ap_block_state20_io) & (ap_enable_reg_pp2_iter2 == 1'b1));
end

assign ap_block_state13_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state14_pp1_stage0_iter1 = ((pass_Out_sink_In_V_empty_n == 1'b0) & (exitcond105_i_reg_1492 == 1'd0));
end

assign ap_block_state15_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2 = ((pass_Out_sink_In_offset_V_empty_n == 1'b0) & (tmp_90_nbreadreq_fu_198_p3 == 1'd1));
end

always @ (*) begin
    ap_block_state20_io = ((ap_sig_ioackin_pass_Out_sink_In_WREADY == 1'b0) & (exitcond_i_reg_1548_pp2_iter1_reg == 1'd0));
end

assign ap_block_state20_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_io = ((ap_sig_ioackin_pass_Out_sink_In_AWREADY == 1'b0) & (tmp_90_nbreadreq_fu_198_p3 == 1'd1));
end

assign ap_block_state4_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_pp0_stage0_iter1 = ((pass_Out_sink_In_V_empty_n == 1'b0) & (exitcond106_i_reg_1358 == 1'd0));
end

assign ap_block_state6_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state9_io = ((ap_sig_ioackin_pass_Out_sink_In_AWREADY == 1'b0) & (tmp_27_fu_857_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_686 = (~((pass_Out_sink_In_offset_V_empty_n == 1'b0) & (tmp_90_nbreadreq_fu_198_p3 == 1'd1)) & (1'b1 == ap_CS_fsm_state2) & (tmp_90_nbreadreq_fu_198_p3 == 1'd1));
end

always @ (*) begin
    ap_condition_710 = ((1'b0 == ap_block_pp2_stage0_01001) & (ap_enable_reg_pp2_iter2 == 1'b1) & (exitcond_i_reg_1548_pp2_iter1_reg == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign brmerge_i_fu_972_p2 = (tmp_28_reg_1433 | tmp2_fu_966_p2);

assign buffer_space_fu_432_p2 = (pass_Out_sink_In_available_size - tmp_fu_428_p1);

assign burst_buffer_index_1_i_cast_fu_910_p1 = burst_buffer_index_1_i_reg_313;

assign burst_buffer_index_fu_1211_p2 = (burst_buffer_index_2_i_reg_338 + 32'd1);

assign bus_lines_to_write_0_i_fu_592_p3 = ((tmp_s_fu_586_p2[0:0] === 1'b1) ? bus_lines_to_write_fu_576_p2 : full_bus_lines_to_write_cast_fu_573_p1);

assign bus_lines_to_write_cast_fu_582_p1 = bus_lines_to_write_fu_576_p2;

assign bus_lines_to_write_fu_576_p2 = (29'd1 + full_bus_lines_to_write_cast_fu_573_p1);

assign can_write_fu_484_p2 = ((tokens_to_write_fu_479_p3 == 32'd0) ? 1'b1 : 1'b0);

assign chunk_size_fu_877_p2 = (bus_lines_to_write_cast_reg_1334 - i1_0_i_cast_fu_862_p1);

assign exitcond105_i_fu_1007_p2 = ((j_0_i_reg_373 == j_end_reg_348) ? 1'b1 : 1'b0);

assign exitcond106_i_fu_639_p2 = ((i_0_i_reg_289 == tokens_to_fill_bus_line_reg_1348) ? 1'b1 : 1'b0);

assign exitcond_i_fu_1223_p2 = ((j6_0_i_reg_384 == full_chunk_size_cast_reg_1455) ? 1'b1 : 1'b0);

assign extended_tokens_to_write_fu_498_p2 = (tmp_8_fu_494_p1 + tokens_to_write_fu_479_p3);

assign full_bus_lines_to_write_cast_fu_573_p1 = tmp_19_reg_1311;

assign full_chunk_size_cast_fu_920_p1 = full_chunk_size_fu_914_p3;

assign full_chunk_size_fu_914_p3 = ((tmp_28_reg_1433[0:0] === 1'b1) ? 30'd64 : chunk_size_reg_1440);

assign has_partial_last_line_fu_929_p2 = (tmp_25_reg_1414 & not_i_fu_924_p2);

assign high_range_1_fu_1049_p2 = ($signed(10'd1023) + $signed(tmp_39_fu_1041_p3));

assign high_range_fu_684_p2 = ($signed(tmp_23_fu_677_p3) + $signed(16'd65535));

assign i1_0_i_cast_fu_862_p1 = i1_0_i_reg_326;

assign i_1_fu_866_p2 = (i1_0_i_reg_326 + 29'd64);

assign i_fu_644_p2 = (i_0_i_reg_289 + 16'd1);

assign j_1_fu_1013_p2 = (j_0_i_reg_373 + 5'd1);

assign j_fu_1228_p2 = (j6_0_i_reg_384 + 32'd1);

assign last_line_fu_956_p2 = ((burst_buffer_index_2_i_reg_338 == tmp_29_cast_reg_1467) ? 1'b1 : 1'b0);

assign last_partial_tokens_fu_568_p2 = (tmp_15_fu_565_p1 + i_pass_Out_sink_In_output_stage_mem_partial_bus_line_len_load_reg_1303);

assign loc_V_1_fu_1092_p1 = reg_420;

assign loc_V_fu_717_p1 = reg_420;

assign low_range_1_fu_1055_p3 = {{tmp_69_reg_1501}, {5'd0}};

assign low_range_fu_699_p3 = {{tmp_26_fu_690_p2}, {5'd0}};

assign not_i_fu_924_p2 = (tmp_28_reg_1433 ^ 1'd1);

assign p_013_0_i_fu_1243_p1 = tmp_5_reg_1316;

assign p_028_0_i_fu_1239_p1 = val_assign_1_reg_1445;

assign p_Result_2_fu_1182_p2 = (tmp_88_fu_1176_p2 | tmp_87_fu_1170_p2);

assign p_Result_s_fu_826_p2 = (tmp_67_fu_821_p2 | tmp_66_fu_815_p2);

assign p_Val2_2_fu_1188_p3 = ((has_partial_last_line_reg_1462[0:0] === 1'b1) ? p_Val2_1_reg_360 : 512'd0);

assign p_demorgan1_fu_1158_p2 = (tmp_85_fu_1152_p2 & tmp_84_fu_1146_p2);

assign p_demorgan_fu_789_p2 = (tmp_64_fu_783_p2 & tmp_63_fu_777_p2);

assign pass_Out_sink_In_buffer_V3_fu_444_p4 = {{pass_Out_sink_In_buffer_V[63:6]}};

assign pass_Out_sink_In_buffer_V4_sum_fu_1002_p2 = (tmp_4_reg_1271 + tmp_43_fu_997_p2);

assign pass_Out_sink_In_size_V1_fu_458_p4 = {{pass_Out_sink_In_size_V[63:6]}};

assign phitmp_cast_fu_854_p1 = last_partial_tokens_reg_1321;

assign return_code_1_i_cast_fu_1247_p1 = return_code_1_i_reg_395;

assign storemerge1_i_fu_944_p3 = ((has_partial_last_line_fu_929_p2[0:0] === 1'b1) ? last_partial_tokens_reg_1321 : 4'd0);

assign tmp1_cast_fu_664_p1 = tmp1_fu_658_p2;

assign tmp1_fu_658_p2 = (tmp_24_cast_fu_654_p1 + 5'd1);

assign tmp2_demorgan_fu_961_p2 = (tmp_25_reg_1414 & last_line_fu_956_p2);

assign tmp2_fu_966_p2 = (tmp2_demorgan_fu_961_p2 ^ 1'd1);

assign tmp_10_cast_fu_611_p1 = tmp_10_fu_605_p2;

assign tmp_10_fu_605_p2 = ($signed(5'd16) - $signed(tmp_8_cast_fu_562_p1));

assign tmp_11_fu_615_p2 = ((tmp_10_cast_fu_611_p1 > tokens_to_write_reg_1283) ? 1'b1 : 1'b0);

assign tmp_12_fu_526_p1 = pass_Out_sink_In_offset_V_dout[3:0];

assign tmp_14_fu_552_p1 = tmp_7_fu_542_p4;

assign tmp_15_fu_565_p1 = tokens_to_write_reg_1283[3:0];

assign tmp_16_fu_838_p2 = (tmp_13_reg_279 + tmp_22_reg_1353);

assign tmp_17_fu_623_p1 = tmp_10_fu_605_p2;

assign tmp_1_fu_438_p2 = ((buffer_space_fu_432_p2 > fifo_count) ? 1'b1 : 1'b0);

assign tmp_20_fu_620_p1 = tokens_to_write_reg_1283[15:0];

assign tmp_21_fu_674_p1 = i_pass_Out_sink_In_output_stage_mem_partial_bus_line_len_load_1_reg_1367;

assign tmp_22_fu_635_p1 = tokens_to_fill_bus_line_fu_627_p3[3:0];

assign tmp_23_fu_677_p3 = {{tmp_24_reg_1378}, {5'd0}};

assign tmp_24_cast_fu_654_p1 = i_pass_Out_sink_In_output_stage_mem_partial_bus_line_len;

assign tmp_24_fu_668_p2 = (tmp_37_fu_650_p1 + tmp1_cast_fu_664_p1);

assign tmp_25_fu_849_p2 = ((last_partial_tokens_reg_1321 != 4'd0) ? 1'b1 : 1'b0);

assign tmp_26_fu_690_p2 = (tmp_21_fu_674_p1 + tmp_37_reg_1373);

assign tmp_27_fu_857_p2 = ((i1_0_i_reg_326 < bus_lines_to_write_reg_1328) ? 1'b1 : 1'b0);

assign tmp_28_fu_872_p2 = ((i_1_fu_866_p2 < bus_lines_to_write_reg_1328) ? 1'b1 : 1'b0);

assign tmp_29_cast_fu_940_p1 = $signed(tmp_29_fu_934_p2);

assign tmp_29_fu_934_p2 = ($signed(full_chunk_size_fu_914_p3) + $signed(30'd1073741823));

assign tmp_2_fu_600_p2 = ((i_pass_Out_sink_In_output_stage_mem_partial_bus_line_len_load_reg_1303 == 4'd0) ? 1'b1 : 1'b0);

assign tmp_30_fu_882_p1 = tokens_to_write_reg_1283;

assign tmp_31_fu_896_p1 = bus_lines_to_write_0_i_reg_1339;

assign tmp_32_fu_899_p2 = (i_pass_Out_sink_In_output_stage_mem_full_bus_lines_written_load_reg_1297 + tmp_31_fu_896_p1);

assign tmp_33_fu_951_p2 = ((burst_buffer_index_2_i_reg_338 < full_chunk_size_cast_reg_1455) ? 1'b1 : 1'b0);

assign tmp_35_fu_981_p2 = (i_pass_Out_sink_In_output_stage_mem_partial_writes + 64'd1);

assign tmp_36_fu_1234_p1 = j6_0_i_reg_384;

assign tmp_37_fu_650_p1 = i_0_i_reg_289[10:0];

assign tmp_39_fu_1041_p3 = {{tmp_48_fu_1035_p2}, {3'd0}};

assign tmp_40_fu_695_p1 = tmp_26_fu_690_p2[4:0];

assign tmp_41_fu_1206_p1 = burst_buffer_index_2_i_reg_338;

assign tmp_42_fu_993_p1 = i1_0_i_reg_326;

assign tmp_43_fu_997_p2 = (tmp_42_fu_993_p1 + i_pass_Out_sink_In_output_stage_mem_full_bus_lines_written_load_reg_1297);

assign tmp_46_fu_1023_p3 = {{tmp_69_fu_1019_p1}, {2'd0}};

assign tmp_47_fu_707_p2 = ((low_range_fu_699_p3 > high_range_fu_684_p2) ? 1'b1 : 1'b0);

assign tmp_48_fu_1035_p2 = (7'd4 + tmp_51_cast4_fu_1031_p1);

assign tmp_4_fu_454_p1 = pass_Out_sink_In_buffer_V3_fu_444_p4;

assign tmp_50_fu_721_p3 = {{tmp_40_reg_1383}, {5'd0}};

assign tmp_51_cast4_fu_1031_p1 = tmp_46_fu_1023_p3;

assign tmp_51_fu_713_p1 = high_range_fu_684_p2[9:0];

assign tmp_52_fu_728_p2 = (10'd511 - tmp_50_fu_721_p3);

assign tmp_53_fu_734_p3 = ((tmp_47_reg_1388[0:0] === 1'b1) ? tmp_50_fu_721_p3 : tmp_51_reg_1396);

assign tmp_54_fu_740_p3 = ((tmp_47_reg_1388[0:0] === 1'b1) ? tmp_51_reg_1396 : tmp_50_fu_721_p3);

assign tmp_55_fu_746_p3 = ((tmp_47_reg_1388[0:0] === 1'b1) ? tmp_52_fu_728_p2 : tmp_50_fu_721_p3);

assign tmp_56_fu_753_p2 = (10'd511 - tmp_53_fu_734_p3);

assign tmp_57_fu_759_p1 = tmp_55_fu_746_p3;

assign tmp_58_fu_763_p1 = tmp_54_fu_740_p3;

assign tmp_59_fu_767_p1 = tmp_56_fu_753_p2;

assign tmp_60_fu_771_p2 = loc_V_fu_717_p1 << tmp_57_fu_759_p1;

integer ap_tvar_int_0;

always @ (tmp_60_reg_1402) begin
    for (ap_tvar_int_0 = 512 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 511 - 0) begin
            tmp_61_fu_795_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            tmp_61_fu_795_p4[ap_tvar_int_0] = tmp_60_reg_1402[511 - ap_tvar_int_0];
        end
    end
end

assign tmp_62_fu_804_p3 = ((tmp_47_reg_1388_pp0_iter2_reg[0:0] === 1'b1) ? tmp_61_fu_795_p4 : tmp_60_reg_1402);

assign tmp_63_fu_777_p2 = 512'd13407807929942597099574024998205846127479365820592393377723561443721764030073546976801874298166903427690031858186486050853753882811946569946433649006084095 << tmp_58_fu_763_p1;

assign tmp_64_fu_783_p2 = 512'd13407807929942597099574024998205846127479365820592393377723561443721764030073546976801874298166903427690031858186486050853753882811946569946433649006084095 >> tmp_59_fu_767_p1;

assign tmp_65_fu_810_p2 = (p_demorgan_reg_1408 ^ 512'd13407807929942597099574024998205846127479365820592393377723561443721764030073546976801874298166903427690031858186486050853753882811946569946433649006084095);

assign tmp_66_fu_815_p2 = (tmp_65_fu_810_p2 & i_pass_Out_sink_In_output_stage_mem_partial_bus_line_bus_line_V);

assign tmp_67_fu_821_p2 = (tmp_62_fu_804_p3 & p_demorgan_reg_1408);

assign tmp_69_fu_1019_p1 = j_0_i_reg_373[3:0];

assign tmp_6_fu_468_p1 = pass_Out_sink_In_size_V1_fu_458_p4;

assign tmp_71_fu_1069_p2 = ((Lo_assign_1_fu_1065_p1 > Hi_assign_1_fu_1062_p1) ? 1'b1 : 1'b0);

assign tmp_72_fu_1075_p1 = low_range_1_fu_1055_p3;

assign tmp_73_fu_1096_p2 = (tmp_72_reg_1520 ^ 10'd511);

assign tmp_74_fu_1079_p3 = ((tmp_71_fu_1069_p2[0:0] === 1'b1) ? tmp_72_fu_1075_p1 : high_range_1_reg_1506);

assign tmp_75_fu_1101_p3 = ((tmp_71_reg_1513[0:0] === 1'b1) ? high_range_1_reg_1506_pp1_iter1_reg : tmp_72_reg_1520);

assign tmp_76_fu_1106_p3 = ((tmp_71_reg_1513[0:0] === 1'b1) ? tmp_73_fu_1096_p2 : tmp_72_reg_1520);

assign tmp_77_fu_1086_p2 = (10'd511 - tmp_74_fu_1079_p3);

assign tmp_78_fu_1112_p1 = tmp_76_fu_1106_p3;

assign tmp_79_fu_1116_p1 = tmp_75_fu_1101_p3;

assign tmp_7_fu_542_p4 = {{pass_Out_sink_In_offset_V_dout[63:4]}};

assign tmp_80_fu_1120_p1 = tmp_77_reg_1527;

assign tmp_81_fu_1123_p2 = loc_V_1_fu_1092_p1 << tmp_78_fu_1112_p1;

integer ap_tvar_int_1;

always @ (tmp_81_fu_1123_p2) begin
    for (ap_tvar_int_1 = 512 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 511 - 0) begin
            tmp_82_fu_1129_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            tmp_82_fu_1129_p4[ap_tvar_int_1] = tmp_81_fu_1123_p2[511 - ap_tvar_int_1];
        end
    end
end

assign tmp_83_fu_1139_p3 = ((tmp_71_reg_1513[0:0] === 1'b1) ? tmp_82_fu_1129_p4 : tmp_81_fu_1123_p2);

assign tmp_84_fu_1146_p2 = 512'd13407807929942597099574024998205846127479365820592393377723561443721764030073546976801874298166903427690031858186486050853753882811946569946433649006084095 << tmp_79_fu_1116_p1;

assign tmp_85_fu_1152_p2 = 512'd13407807929942597099574024998205846127479365820592393377723561443721764030073546976801874298166903427690031858186486050853753882811946569946433649006084095 >> tmp_80_fu_1120_p1;

assign tmp_86_fu_1164_p2 = (p_demorgan1_fu_1158_p2 ^ 512'd13407807929942597099574024998205846127479365820592393377723561443721764030073546976801874298166903427690031858186486050853753882811946569946433649006084095);

assign tmp_87_fu_1170_p2 = (tmp_86_fu_1164_p2 & p_Val2_1_reg_360);

assign tmp_88_fu_1176_p2 = (tmp_83_fu_1139_p3 & p_demorgan1_fu_1158_p2);

assign tmp_8_cast_fu_562_p1 = i_pass_Out_sink_In_output_stage_mem_partial_bus_line_len_load_reg_1303;

assign tmp_8_fu_494_p1 = i_pass_Out_sink_In_output_stage_mem_partial_bus_line_len;

assign tmp_90_nbreadreq_fu_198_p3 = pass_Out_sink_In_offset_V_empty_n;

assign tmp_9_fu_504_p2 = ($signed(32'd4294967295) + $signed(extended_tokens_to_write_fu_498_p2));

assign tmp_fu_428_p1 = i_pass_Out_sink_In_output_stage_mem_tokens_written[31:0];

assign tmp_s_fu_586_p2 = ((last_partial_tokens_fu_568_p2 == 4'd0) ? 1'b1 : 1'b0);

assign tokens_to_fill_bus_line_fu_627_p3 = ((tmp_11_fu_615_p2[0:0] === 1'b1) ? tmp_20_fu_620_p1 : tmp_17_fu_623_p1);

assign tokens_to_write_fu_479_p3 = ((tmp_1_reg_1266[0:0] === 1'b1) ? fifo_count : buffer_space_reg_1261);

assign val_assign_1_fu_885_p2 = (i_pass_Out_sink_In_output_stage_mem_tokens_written_load_reg_1256 + tmp_30_fu_882_p1);

always @ (posedge ap_clk) begin
    ap_return[0] <= 1'b1;
    ap_return[31:2] <= 30'b000000000000000000000000000000;
    tmp_4_reg_1271[63:58] <= 6'b000000;
    pass_Out_sink_In_addr_reg_1276[63:58] <= 6'b000000;
    bus_lines_to_write_cast_reg_1334[29] <= 1'b0;
    tmp_51_reg_1396[4:0] <= 5'b11111;
    phitmp_cast_reg_1420[4] <= 1'b0;
    high_range_1_reg_1506[4:0] <= 5'b11111;
    high_range_1_reg_1506_pp1_iter1_reg[4:0] <= 5'b11111;
    tmp_72_reg_1520[4:0] <= 5'b00000;
    tmp_72_reg_1520[9] <= 1'b0;
    return_code_1_i_reg_395[0] <= 1'b1;
end

endmodule //pass_Out_sink_In_output_stage_mem
